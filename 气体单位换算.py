# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '气体单位换算.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow,QMessageBox
from PyQt5.QtGui import *
import sqlite3
import datetime
from sqlite3 import Error

#连接数据库
def sql_connection():
    try:
        # con = sqlite3.connect("气体单位换算数据库.db")
        con = sqlite3.connect("公式集合数据库.db")
        return con
    except Error:
        print(Error)
#创建表
def sql_table(con):
    try:
        # 创建游标
        cursor = con.cursor()
        cursor.execute("create table 气体单位换算 (日期,Pa,KPa,MPa,bar,mbar,kgf,cmH2O,mmH2O,mmHg,psi)")
        # 提交事务
        con.commit()
    except Error:
        print(Error)
con = sql_connection()
sql_table(con)

class Ui_qitidanweihuansuan(QMainWindow):
    def setupUi(self, qitidanweihuansuan):
        qitidanweihuansuan.setObjectName("qitidanweihuansuan")
        qitidanweihuansuan.setWindowModality(QtCore.Qt.NonModal)
        qitidanweihuansuan.setEnabled(True)
        qitidanweihuansuan.resize(410, 550)
        qitidanweihuansuan.setMaximumSize(QtCore.QSize(410, 550))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        qitidanweihuansuan.setFont(font)
        qitidanweihuansuan.setMouseTracking(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/PNG/chengliang.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        qitidanweihuansuan.setWindowIcon(icon)
        qitidanweihuansuan.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label = QtWidgets.QLabel(qitidanweihuansuan)
        self.label.setGeometry(QtCore.QRect(0, 10, 410, 31))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(24)
        font.setKerning(True)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(qitidanweihuansuan)
        self.pushButton.setGeometry(QtCore.QRect(240, 480, 130, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(20)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(85, 170, 255);")
        self.pushButton.setObjectName("pushButton")
        self.comboBox = QtWidgets.QComboBox(qitidanweihuansuan)
        self.comboBox.setGeometry(QtCore.QRect(40, 480, 160, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_13 = QtWidgets.QLabel(qitidanweihuansuan)
        self.label_13.setGeometry(QtCore.QRect(30, 379, 100, 30))
        self.label_13.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_13.setFont(font)
        self.label_13.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_13.setObjectName("label_13")
        self.lineEdit_10 = QtWidgets.QLineEdit(qitidanweihuansuan)
        self.lineEdit_10.setEnabled(True)
        self.lineEdit_10.setGeometry(QtCore.QRect(150, 419, 235, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.lineEdit_10.setFont(font)
        self.lineEdit_10.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_10.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_10.setText("")
        self.lineEdit_10.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_10.setClearButtonEnabled(True)
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.lineEdit_4 = QtWidgets.QLineEdit(qitidanweihuansuan)
        self.lineEdit_4.setEnabled(True)
        self.lineEdit_4.setGeometry(QtCore.QRect(150, 187, 235, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_4.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_4.setText("")
        self.lineEdit_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_4.setClearButtonEnabled(True)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_2 = QtWidgets.QLineEdit(qitidanweihuansuan)
        self.lineEdit_2.setEnabled(True)
        self.lineEdit_2.setGeometry(QtCore.QRect(150, 109, 235, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_2.setText("")
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_2.setClearButtonEnabled(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_5 = QtWidgets.QLineEdit(qitidanweihuansuan)
        self.lineEdit_5.setEnabled(True)
        self.lineEdit_5.setGeometry(QtCore.QRect(150, 225, 235, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_5.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_5.setText("")
        self.lineEdit_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_5.setClearButtonEnabled(True)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_7 = QtWidgets.QLineEdit(qitidanweihuansuan)
        self.lineEdit_7.setEnabled(True)
        self.lineEdit_7.setGeometry(QtCore.QRect(150, 303, 235, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.lineEdit_7.setFont(font)
        self.lineEdit_7.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_7.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_7.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.lineEdit = QtWidgets.QLineEdit(qitidanweihuansuan)
        self.lineEdit.setEnabled(True)
        self.lineEdit.setGeometry(QtCore.QRect(150, 70, 235, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.lineEdit.setFont(font)
        self.lineEdit.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit.setText("")
        self.lineEdit.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_6 = QtWidgets.QLineEdit(qitidanweihuansuan)
        self.lineEdit_6.setEnabled(True)
        self.lineEdit_6.setGeometry(QtCore.QRect(150, 264, 235, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.lineEdit_6.setFont(font)
        self.lineEdit_6.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_6.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_6.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.lineEdit_8 = QtWidgets.QLineEdit(qitidanweihuansuan)
        self.lineEdit_8.setEnabled(True)
        self.lineEdit_8.setGeometry(QtCore.QRect(150, 341, 235, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.lineEdit_8.setFont(font)
        self.lineEdit_8.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_8.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_8.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.lineEdit_3 = QtWidgets.QLineEdit(qitidanweihuansuan)
        self.lineEdit_3.setEnabled(True)
        self.lineEdit_3.setGeometry(QtCore.QRect(150, 148, 235, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_3.setText("")
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_3.setClearButtonEnabled(True)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_9 = QtWidgets.QLineEdit(qitidanweihuansuan)
        self.lineEdit_9.setEnabled(True)
        self.lineEdit_9.setGeometry(QtCore.QRect(150, 380, 235, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.lineEdit_9.setFont(font)
        self.lineEdit_9.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_9.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_9.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.label_6 = QtWidgets.QLabel(qitidanweihuansuan)
        self.label_6.setGeometry(QtCore.QRect(30, 67, 100, 30))
        self.label_6.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.label_16 = QtWidgets.QLabel(qitidanweihuansuan)
        self.label_16.setGeometry(QtCore.QRect(30, 223, 100, 30))
        self.label_16.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_16.setFont(font)
        self.label_16.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_16.setObjectName("label_16")
        self.label_10 = QtWidgets.QLabel(qitidanweihuansuan)
        self.label_10.setGeometry(QtCore.QRect(30, 262, 100, 30))
        self.label_10.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_10.setFont(font)
        self.label_10.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(qitidanweihuansuan)
        self.label_11.setGeometry(QtCore.QRect(30, 301, 100, 30))
        self.label_11.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_11.setFont(font)
        self.label_11.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_11.setObjectName("label_11")
        self.label_9 = QtWidgets.QLabel(qitidanweihuansuan)
        self.label_9.setGeometry(QtCore.QRect(30, 184, 100, 30))
        self.label_9.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_9.setFont(font)
        self.label_9.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_9.setObjectName("label_9")
        self.label_8 = QtWidgets.QLabel(qitidanweihuansuan)
        self.label_8.setGeometry(QtCore.QRect(30, 145, 100, 30))
        self.label_8.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.label_7 = QtWidgets.QLabel(qitidanweihuansuan)
        self.label_7.setGeometry(QtCore.QRect(30, 106, 100, 30))
        self.label_7.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.label_14 = QtWidgets.QLabel(qitidanweihuansuan)
        self.label_14.setGeometry(QtCore.QRect(30, 418, 100, 30))
        self.label_14.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_14.setFont(font)
        self.label_14.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_14.setObjectName("label_14")
        self.label_12 = QtWidgets.QLabel(qitidanweihuansuan)
        self.label_12.setGeometry(QtCore.QRect(30, 340, 100, 30))
        self.label_12.setMaximumSize(QtCore.QSize(100, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_12.setFont(font)
        self.label_12.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_12.setObjectName("label_12")

        self.retranslateUi(qitidanweihuansuan)
        QtCore.QMetaObject.connectSlotsByName(qitidanweihuansuan)

        self.comboBox.currentIndexChanged.connect(self.danwei)
        self.pushButton.clicked.connect(self.jisuan)

        self.lineEdit_10.editingFinished.connect(self.jisuan)

        # 只允许输入数字
        self.lineEdit.setValidator(QDoubleValidator())
        self.lineEdit_2.setValidator(QDoubleValidator())
        self.lineEdit_3.setValidator(QDoubleValidator())
        self.lineEdit_4.setValidator(QDoubleValidator())
        self.lineEdit_5.setValidator(QDoubleValidator())
        self.lineEdit_6.setValidator(QDoubleValidator())
        self.lineEdit_7.setValidator(QDoubleValidator())
        self.lineEdit_8.setValidator(QDoubleValidator())
        self.lineEdit_9.setValidator(QDoubleValidator())
        self.lineEdit_10.setValidator(QDoubleValidator())



        self.lineEdit_6.setClearButtonEnabled(True)
        self.lineEdit_7.setClearButtonEnabled(True)
        self.lineEdit_8.setClearButtonEnabled(True)
        self.lineEdit_9.setClearButtonEnabled(True)

        self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")




    def retranslateUi(self, qitidanweihuansuan):
        _translate = QtCore.QCoreApplication.translate
        qitidanweihuansuan.setWindowTitle(_translate("qitidanweihuansuan", "气体单位换算V1.1 By ChengLiang"))
        self.label.setText(_translate("qitidanweihuansuan", "气体单位换算"))
        self.pushButton.setText(_translate("qitidanweihuansuan", "换算"))
        self.comboBox.setItemText(0, _translate("qitidanweihuansuan", "Pa"))
        self.comboBox.setItemText(1, _translate("qitidanweihuansuan", "KPa"))
        self.comboBox.setItemText(2, _translate("qitidanweihuansuan", "MPa"))
        self.comboBox.setItemText(3, _translate("qitidanweihuansuan", "bar"))
        self.comboBox.setItemText(4, _translate("qitidanweihuansuan", "mbar"))
        self.comboBox.setItemText(5, _translate("qitidanweihuansuan", "kgf/cm2"))
        self.comboBox.setItemText(6, _translate("qitidanweihuansuan", "cmH20"))
        self.comboBox.setItemText(7, _translate("qitidanweihuansuan", "mmH2O"))
        self.comboBox.setItemText(8, _translate("qitidanweihuansuan", "mmHg"))
        self.comboBox.setItemText(9, _translate("qitidanweihuansuan", "p.s.i"))
        self.label_13.setText(_translate("qitidanweihuansuan", "mmHg"))
        self.label_6.setText(_translate("qitidanweihuansuan", "Pa"))
        self.label_16.setText(_translate("qitidanweihuansuan", "mbar"))
        self.label_10.setText(_translate("qitidanweihuansuan", "kgf/cm2"))
        self.label_11.setText(_translate("qitidanweihuansuan", "cmH2O"))
        self.label_9.setText(_translate("qitidanweihuansuan", "bar"))
        self.label_8.setText(_translate("qitidanweihuansuan", "MPa"))
        self.label_7.setText(_translate("qitidanweihuansuan", "KPa"))
        self.label_14.setText(_translate("qitidanweihuansuan", "p.s.i"))
        self.label_12.setText(_translate("qitidanweihuansuan", "mmH2O"))

    def danwei(self):
        A = self.comboBox.currentText()
        if A == "Pa":
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        if A == "KPa":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        if A == "MPa":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        if A == "bar":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        if A == "mbar":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        if A == "kgf/cm2":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        if A == "cmH2O":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        if A == "mmH2O":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        if A == "mmHg":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        if A == "p.s.i":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_10.setStyleSheet("background-color: rgb(85, 255, 255);")

    def jisuan(self):
        global  Pa,KPa,MPa,bar,mbar,kgf,cmH2O,mmH2O,mmHg,psi
        A = self.comboBox.currentText()
        if A == "Pa":
            Pa=self.lineEdit.text()
            if Pa==None or Pa=="" or float(Pa)<0:
                QMessageBox.information(None, "使用提示", "输入不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Pa=float(Pa)
                KPa=round(Pa/1000,12)
                MPa = round(Pa / 1000000, 12)
                bar = round(Pa / 100000, 12)
                mbar = round(Pa / 100, 12)
                kgf = round(10.2 * Pa / 1000000, 12)
                cmH2O = round(1.02 * Pa / 1000, 12)
                mmH2O = round(101.97 * Pa / 1000, 12)
                mmHg = round(7.5 * Pa / 1000, 12)
                psi = round(0.145 * Pa / 1000, 12)
                self.lineEdit_2.setText(str(KPa))
                self.lineEdit_3.setText(str(MPa))
                self.lineEdit_4.setText(str(bar))
                self.lineEdit_5.setText(str(mbar))
                self.lineEdit_6.setText(str(kgf))
                self.lineEdit_7.setText(str(cmH2O))
                self.lineEdit_8.setText(str(mmH2O))
                self.lineEdit_9.setText(str(mmHg))
                self.lineEdit_10.setText(str(psi))
                self.shuju()
        if A == "KPa":
            KPa = self.lineEdit_2.text()
            if KPa==None or KPa=="" or float(KPa)<0:
                QMessageBox.information(None, "使用提示", "输入不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Pa = round(float(KPa) * 1000, 12)
                MPa = round(Pa / 1000000, 12)
                bar = round(Pa / 100000, 12)
                mbar = round(Pa / 100, 12)
                kgf = round(10.2 * Pa / 1000000, 12)
                cmH2O = round(1.02 * Pa / 1000, 12)
                mmH2O = round(101.97 * Pa / 1000, 12)
                mmHg = round(7.5 * Pa / 1000, 12)
                psi = round(0.145 * Pa / 1000, 12)
                self.lineEdit.setText(str(Pa))
                self.lineEdit_3.setText(str(MPa))
                self.lineEdit_4.setText(str(bar))
                self.lineEdit_5.setText(str(mbar))
                self.lineEdit_6.setText(str(kgf))
                self.lineEdit_7.setText(str(cmH2O))
                self.lineEdit_8.setText(str(mmH2O))
                self.lineEdit_9.setText(str(mmHg))
                self.lineEdit_10.setText(str(psi))
                self.shuju()
        if A == "MPa":
            MPa =self.lineEdit_3.text()
            if MPa==None or MPa=="" or float(MPa)<0:
                QMessageBox.information(None, "使用提示", "输入不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Pa = round(float(MPa) * 1000000, 12)
                KPa = round(Pa / 1000, 12)
                bar = round(Pa / 100000, 12)
                mbar = round(Pa / 100, 12)
                kgf = round(10.2 * Pa / 1000000, 12)
                cmH2O = round(1.02 * Pa / 1000, 12)
                mmH2O = round(101.97 * Pa / 1000, 12)
                mmHg = round(7.5 * Pa / 1000, 12)
                psi = round(0.145 * Pa / 1000, 12)
                self.lineEdit.setText(str(Pa))
                self.lineEdit_2.setText(str(KPa))
                self.lineEdit_4.setText(str(bar))
                self.lineEdit_5.setText(str(mbar))
                self.lineEdit_6.setText(str(kgf))
                self.lineEdit_7.setText(str(cmH2O))
                self.lineEdit_8.setText(str(mmH2O))
                self.lineEdit_9.setText(str(mmHg))
                self.lineEdit_10.setText(str(psi))
                self.shuju()
        if A == "bar":
            bar=self.lineEdit_4.text()
            if bar==None or bar=="" or float(bar)<0:
                QMessageBox.information(None, "使用提示", "输入不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Pa = round(float(bar) * 100000, 12)
                KPa = round(Pa / 1000, 12)
                MPa = round(Pa / 1000000, 12)
                mbar = round(Pa / 100, 12)
                kgf = round(10.2 * Pa / 1000000, 12)
                cmH2O = round(1.02 * Pa / 1000, 12)
                mmH2O = round(101.97 * Pa / 1000, 12)
                mmHg = round(7.5 * Pa / 1000, 12)
                psi = round(0.145 * Pa / 1000, 12)
                self.lineEdit.setText(str(Pa))
                self.lineEdit_2.setText(str(KPa))
                self.lineEdit_3.setText(str(MPa))
                self.lineEdit_5.setText(str(mbar))
                self.lineEdit_6.setText(str(kgf))
                self.lineEdit_7.setText(str(cmH2O))
                self.lineEdit_8.setText(str(mmH2O))
                self.lineEdit_9.setText(str(mmHg))
                self.shuju()
        if A == "mbar":
            mbar= self.lineEdit_5.text()
            if mbar==None or mbar=="" or float(mbar)<0:
                QMessageBox.information(None, "使用提示", "输入不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Pa = round(float(mbar) * 100, 12)
                KPa = round(Pa / 1000, 12)
                MPa = round(Pa / 1000000, 12)
                bar = round(Pa / 100000, 12)
                kgf = round(10.2 * Pa / 1000000, 12)
                cmH2O = round(1.02 * Pa / 1000, 12)
                mmH2O = round(101.97 * Pa / 1000, 12)
                mmHg = round(7.5 * Pa / 1000, 12)
                psi = round(0.145 * Pa / 1000, 12)
                self.lineEdit_2.setText(str(KPa))
                self.lineEdit_3.setText(str(MPa))
                self.lineEdit_4.setText(str(bar))
                self.lineEdit.setText(str(Pa))
                self.lineEdit_6.setText(str(kgf))
                self.lineEdit_7.setText(str(cmH2O))
                self.lineEdit_8.setText(str(mmH2O))
                self.lineEdit_9.setText(str(mmHg))
                self.lineEdit_10.setText(str(psi))
                self.shuju()
        if A == "kgf/cm2":
            kgf=self.lineEdit_6.text()
            if mbar==None or mbar=="" or float(mbar)<0:
                QMessageBox.information(None, "使用提示", "输入不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Pa = round(1000000 * float(kgf) / 10.2, 12)
                KPa = round(Pa / 1000, 12)
                MPa = round(Pa / 1000000, 12)
                bar = round(Pa / 100000, 12)
                mbar = round(Pa / 100, 12)
                cmH2O = round(1.02 * Pa / 1000, 12)
                mmH2O = round(101.97 * Pa / 1000, 12)
                mmHg = round(7.5 * Pa / 1000, 12)
                psi = round(0.145 * Pa / 1000, 12)
                self.lineEdit_2.setText(str(KPa))
                self.lineEdit_3.setText(str(MPa))
                self.lineEdit_4.setText(str(bar))
                self.lineEdit_5.setText(str(mbar))
                self.lineEdit.setText(str(Pa))
                self.lineEdit_7.setText(str(cmH2O))
                self.lineEdit_8.setText(str(mmH2O))
                self.lineEdit_9.setText(str(mmHg))
                self.lineEdit_10.setText(str(psi))
                self.shuju()
        if A == "cmH2O":
            cmH2O=self.lineEdit_7.text()
            if mbar == None or mbar == "" or float(mbar) < 0:
                QMessageBox.information(None, "使用提示", "输入不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Pa = round(1000 * float(cmH2O) / 1.02, 12)
                KPa = round(Pa / 1000, 12)
                MPa = round(Pa / 1000000, 12)
                bar = round(Pa / 100000, 12)
                mbar = round(Pa / 100, 12)
                kgf = round(10.2 * Pa / 1000000, 12)
                mmH2O = round(101.97 * Pa / 1000, 12)
                mmHg = round(7.5 * Pa / 1000, 12)
                psi = round(0.145 * Pa / 1000, 12)
                self.lineEdit_2.setText(str(KPa))
                self.lineEdit_3.setText(str(MPa))
                self.lineEdit_4.setText(str(bar))
                self.lineEdit_5.setText(str(mbar))
                self.lineEdit_6.setText(str(kgf))
                self.lineEdit.setText(str(Pa))
                self.lineEdit_8.setText(str(mmH2O))
                self.lineEdit_9.setText(str(mmHg))
                self.lineEdit_10.setText(str(psi))
                self.shuju()
        if A == "mmH2O":
            mmH2O= self.lineEdit_8.text()
            if mbar == None or mbar == "" or float(mbar) < 0:
                QMessageBox.information(None, "使用提示", "输入不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Pa = round(1000 * float(mmH2O) / 101.97, 12)
                KPa = round(Pa / 1000, 12)
                MPa = round(Pa / 1000000, 12)
                bar = round(Pa / 100000, 12)
                mbar = round(Pa / 100, 12)
                kgf = round(10.2 * Pa / 1000000, 12)
                cmH2O = round(1.02 * Pa / 1000, 12)
                mmHg = round(7.5 * Pa / 1000, 12)
                psi = round(0.145 * Pa / 1000, 12)
                self.lineEdit_2.setText(str(KPa))
                self.lineEdit_3.setText(str(MPa))
                self.lineEdit_4.setText(str(bar))
                self.lineEdit_5.setText(str(mbar))
                self.lineEdit_6.setText(str(kgf))
                self.lineEdit_7.setText(str(cmH2O))
                self.lineEdit.setText(str(Pa))
                self.lineEdit_9.setText(str(mmHg))
                self.lineEdit_10.setText(str(psi))
                self.shuju()
        if A == "mmHg":
            mmHg= self.lineEdit_9.text()
            if mbar == None or mbar == "" or float(mbar) < 0:
                QMessageBox.information(None, "使用提示", "输入不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Pa = round(1000 * float(mmHg) / 7.5, 12)
                KPa = round(Pa / 1000, 12)
                MPa = round(Pa / 1000000, 12)
                bar = round(Pa / 100000, 12)
                mbar = round(Pa / 100, 12)
                kgf = round(10.2 * Pa / 1000000, 12)
                cmH2O = round(1.02 * Pa / 1000, 12)
                mmH2O = round(101.97 * Pa / 1000, 12)
                psi = round(0.145 * Pa / 1000, 12)
                self.lineEdit_2.setText(str(KPa))
                self.lineEdit_3.setText(str(MPa))
                self.lineEdit_4.setText(str(bar))
                self.lineEdit_5.setText(str(mbar))
                self.lineEdit_6.setText(str(kgf))
                self.lineEdit_7.setText(str(cmH2O))
                self.lineEdit_8.setText(str(mmH2O))
                self.lineEdit.setText(str(Pa))
                self.lineEdit_10.setText(str(psi))
                self.shuju()
        if A == "p.s.i":
            psi = self.lineEdit_10.text()
            if psi == None or psi == "" or float(psi) < 0:
                QMessageBox.information(None, "使用提示", "输入不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Pa = round(1000 * float(psi) / 0.145, 12)
                KPa = round(Pa / 1000, 12)
                MPa = round(Pa / 1000000, 12)
                bar = round(Pa / 100000, 12)
                mbar = round(Pa / 100, 12)
                kgf = round(10.2 * Pa / 1000000, 12)
                cmH2O = round(1.02 * Pa / 1000, 12)
                mmH2O = round(101.97 * Pa / 1000, 12)
                mmHg = round(7.5 * Pa / 1000, 12)
                self.lineEdit_2.setText(str(KPa))
                self.lineEdit_3.setText(str(MPa))
                self.lineEdit_4.setText(str(bar))
                self.lineEdit_5.setText(str(mbar))
                self.lineEdit_6.setText(str(kgf))
                self.lineEdit_7.setText(str(cmH2O))
                self.lineEdit_8.setText(str(mmH2O))
                self.lineEdit_9.setText(str(mmHg))
                self.lineEdit.setText(str(Pa))
                self.shuju()


    def datetime(self):
        global now_time
        now_time= datetime.datetime.now().strftime("%Y.%m.%d %H:%M:%S")

    def shuju(self):
        self.datetime()
        def sql_insert(con, data):
                cursor = con.cursor()
                cursor.execute("insert into 气体单位换算 (日期,Pa,KPa,MPa,bar,mbar,kgf,cmH2O,mmH2O,mmHg,psi) values(?,?,?,?,?,?,?,?,?,?,?)", data)
                con.commit()
        data = (now_time,Pa,KPa,MPa,bar,mbar,kgf,cmH2O,mmH2O,mmHg,psi)
        sql_insert(con, data)


import img_rc
import sys
if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    Mainwidow = QtWidgets.QMainWindow()  # 创建窗体对象
    ui = Ui_qitidanweihuansuan()  # 创建QT设计的窗体
    ui.setupUi(Mainwidow)  # 初始化设置
    Mainwidow.show()  # 显示窗体
    sys.exit(app.exec_())  # 程序关闭时退出进程