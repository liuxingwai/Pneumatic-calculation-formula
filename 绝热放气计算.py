# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '绝热放气计算.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow,QMessageBox
from PyQt5.QtGui import *
import numpy as np
import sqlite3
import datetime
from sqlite3 import Error

#连接数据库
def sql_connection():
    try:
        # con = sqlite3.connect("绝热放气计算数据库.db")
        con = sqlite3.connect("公式集合数据库.db")
        return con
    except Error:
        print(Error)
#创建表
def sql_table(con):
    try:
        # 创建游标
        cursor = con.cursor()
        cursor.execute("create table 绝热放气 (日期,气体类型,放气前容器中温度T1,放气后容器中温度T2,放气前气体压力P1,放气后气体压力P2,等熵指数k,放气前气体质量m1,放气后气体质量m2,容器体积V,气体常数Rm)")
        # 提交事务
        con.commit()
    except Error:
        print(Error)
con = sql_connection()
sql_table(con)


class Ui_juerefangqi(QMainWindow):
    def setupUi(self, juerefangqi):
        juerefangqi.setObjectName("juerefangqi")
        juerefangqi.setWindowModality(QtCore.Qt.NonModal)
        juerefangqi.setEnabled(True)
        juerefangqi.resize(660, 750)
        juerefangqi.setMaximumSize(QtCore.QSize(660, 750))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        juerefangqi.setFont(font)
        juerefangqi.setMouseTracking(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/PNG/chengliang.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        juerefangqi.setWindowIcon(icon)
        juerefangqi.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label = QtWidgets.QLabel(juerefangqi)
        self.label.setGeometry(QtCore.QRect(0, 10, 660, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(24)
        font.setKerning(True)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(juerefangqi)
        self.pushButton.setGeometry(QtCore.QRect(390, 70, 100, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(18)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(85, 170, 255);")
        self.pushButton.setObjectName("pushButton")
        self.lineEdit_2 = QtWidgets.QLineEdit(juerefangqi)
        self.lineEdit_2.setGeometry(QtCore.QRect(320, 180, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_2.setAccessibleName("")
        self.lineEdit_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_2.setText("")
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_2.setReadOnly(False)
        self.lineEdit_2.setPlaceholderText("")
        self.lineEdit_2.setClearButtonEnabled(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_4 = QtWidgets.QLineEdit(juerefangqi)
        self.lineEdit_4.setGeometry(QtCore.QRect(320, 280, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_4.setAccessibleName("")
        self.lineEdit_4.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_4.setText("")
        self.lineEdit_4.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_4.setReadOnly(False)
        self.lineEdit_4.setPlaceholderText("")
        self.lineEdit_4.setClearButtonEnabled(True)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit = QtWidgets.QLineEdit(juerefangqi)
        self.lineEdit.setGeometry(QtCore.QRect(320, 130, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit.setFont(font)
        self.lineEdit.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit.setAccessibleName("")
        self.lineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit.setText("")
        self.lineEdit.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit.setReadOnly(False)
        self.lineEdit.setPlaceholderText("")
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_3 = QtWidgets.QLineEdit(juerefangqi)
        self.lineEdit_3.setGeometry(QtCore.QRect(320, 230, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_3.setAccessibleName("")
        self.lineEdit_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_3.setText("")
        self.lineEdit_3.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_3.setReadOnly(False)
        self.lineEdit_3.setPlaceholderText("")
        self.lineEdit_3.setClearButtonEnabled(True)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_4 = QtWidgets.QLabel(juerefangqi)
        self.label_4.setGeometry(QtCore.QRect(20, 180, 290, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(juerefangqi)
        self.label_5.setGeometry(QtCore.QRect(30, 230, 280, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(juerefangqi)
        self.label_6.setGeometry(QtCore.QRect(30, 280, 280, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.label_3 = QtWidgets.QLabel(juerefangqi)
        self.label_3.setGeometry(QtCore.QRect(20, 130, 290, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.label_10 = QtWidgets.QLabel(juerefangqi)
        self.label_10.setGeometry(QtCore.QRect(30, 590, 601, 131))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("background-color: rgb(85, 170, 0);")
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setObjectName("label_10")
        self.lineEdit_5 = QtWidgets.QLineEdit(juerefangqi)
        self.lineEdit_5.setGeometry(QtCore.QRect(320, 330, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_5.setAccessibleName("")
        self.lineEdit_5.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_5.setText("")
        self.lineEdit_5.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_5.setReadOnly(False)
        self.lineEdit_5.setPlaceholderText("")
        self.lineEdit_5.setClearButtonEnabled(True)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.label_7 = QtWidgets.QLabel(juerefangqi)
        self.label_7.setGeometry(QtCore.QRect(30, 330, 280, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_7.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.lineEdit_6 = QtWidgets.QLineEdit(juerefangqi)
        self.lineEdit_6.setGeometry(QtCore.QRect(320, 380, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_6.setFont(font)
        self.lineEdit_6.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_6.setAccessibleName("")
        self.lineEdit_6.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_6.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_6.setText("")
        self.lineEdit_6.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_6.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_6.setReadOnly(False)
        self.lineEdit_6.setPlaceholderText("")
        self.lineEdit_6.setClearButtonEnabled(True)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.label_8 = QtWidgets.QLabel(juerefangqi)
        self.label_8.setGeometry(QtCore.QRect(50, 380, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_8.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.lineEdit_7 = QtWidgets.QLineEdit(juerefangqi)
        self.lineEdit_7.setGeometry(QtCore.QRect(320, 430, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_7.setFont(font)
        self.lineEdit_7.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_7.setAccessibleName("")
        self.lineEdit_7.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_7.setText("")
        self.lineEdit_7.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_7.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_7.setReadOnly(False)
        self.lineEdit_7.setPlaceholderText("")
        self.lineEdit_7.setClearButtonEnabled(True)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.label_9 = QtWidgets.QLabel(juerefangqi)
        self.label_9.setGeometry(QtCore.QRect(50, 480, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_9.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_9.setObjectName("label_9")
        self.lineEdit_9 = QtWidgets.QLineEdit(juerefangqi)
        self.lineEdit_9.setGeometry(QtCore.QRect(320, 530, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_9.setFont(font)
        self.lineEdit_9.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_9.setAccessibleName("")
        self.lineEdit_9.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_9.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_9.setText("")
        self.lineEdit_9.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_9.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_9.setReadOnly(False)
        self.lineEdit_9.setPlaceholderText("")
        self.lineEdit_9.setClearButtonEnabled(True)
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.label_11 = QtWidgets.QLabel(juerefangqi)
        self.label_11.setGeometry(QtCore.QRect(50, 530, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_11.setFont(font)
        self.label_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_11.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_11.setObjectName("label_11")
        self.lineEdit_8 = QtWidgets.QLineEdit(juerefangqi)
        self.lineEdit_8.setGeometry(QtCore.QRect(320, 480, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_8.setFont(font)
        self.lineEdit_8.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_8.setAccessibleName("")
        self.lineEdit_8.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_8.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_8.setText("")
        self.lineEdit_8.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_8.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_8.setReadOnly(False)
        self.lineEdit_8.setPlaceholderText("")
        self.lineEdit_8.setClearButtonEnabled(True)
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.label_12 = QtWidgets.QLabel(juerefangqi)
        self.label_12.setGeometry(QtCore.QRect(50, 430, 260, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_12.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_12.setObjectName("label_12")
        self.comboBox = QtWidgets.QComboBox(juerefangqi)
        self.comboBox.setGeometry(QtCore.QRect(140, 70, 130, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_2 = QtWidgets.QLabel(juerefangqi)
        self.label_2.setGeometry(QtCore.QRect(80, 70, 50, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.radioButton = QtWidgets.QRadioButton(juerefangqi)
        self.radioButton.setGeometry(QtCore.QRect(590, 130, 41, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.radioButton.setFont(font)
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(juerefangqi)
        self.radioButton_2.setGeometry(QtCore.QRect(590, 180, 41, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setChecked(True)
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_3 = QtWidgets.QRadioButton(juerefangqi)
        self.radioButton_3.setGeometry(QtCore.QRect(590, 230, 41, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.radioButton_3.setFont(font)
        self.radioButton_3.setObjectName("radioButton_3")
        self.radioButton_4 = QtWidgets.QRadioButton(juerefangqi)
        self.radioButton_4.setGeometry(QtCore.QRect(590, 280, 41, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.radioButton_4.setFont(font)
        self.radioButton_4.setChecked(True)
        self.radioButton_4.setObjectName("radioButton_4")
        self.radioButton_5 = QtWidgets.QRadioButton(juerefangqi)
        self.radioButton_5.setGeometry(QtCore.QRect(590, 430, 41, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.radioButton_5.setFont(font)
        self.radioButton_5.setChecked(True)
        self.radioButton_5.setObjectName("radioButton_5")
        self.radioButton_6 = QtWidgets.QRadioButton(juerefangqi)
        self.radioButton_6.setGeometry(QtCore.QRect(590, 480, 41, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.radioButton_6.setFont(font)
        self.radioButton_6.setChecked(False)
        self.radioButton_6.setObjectName("radioButton_6")
        self.radioButton_7 = QtWidgets.QRadioButton(juerefangqi)
        self.radioButton_7.setGeometry(QtCore.QRect(590, 380, 41, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.radioButton_7.setFont(font)
        self.radioButton_7.setChecked(False)
        self.radioButton_7.setObjectName("radioButton_7")

        self.retranslateUi(juerefangqi)
        QtCore.QMetaObject.connectSlotsByName(juerefangqi)

        # 只允许输入数字
        self.lineEdit.setValidator(QDoubleValidator())
        self.lineEdit_2.setValidator(QDoubleValidator())
        self.lineEdit_3.setValidator(QDoubleValidator())
        self.lineEdit_4.setValidator(QDoubleValidator())
        self.lineEdit_5.setValidator(QDoubleValidator())
        self.lineEdit_6.setValidator(QDoubleValidator())
        self.lineEdit_7.setValidator(QDoubleValidator())
        self.lineEdit_8.setValidator(QDoubleValidator())
        self.lineEdit_9.setValidator(QDoubleValidator())

        self.lineEdit_5.setText("1.666")
        self.lineEdit_9.setText(str(float(8314.472/4.0026)))

        self.comboBox.currentIndexChanged.connect(self.box)
        self.pushButton.clicked.connect(self.jisuan)
        self.radioButton.toggled.connect(self.qiu)
        self.radioButton_2.toggled.connect(self.qiu)
        self.radioButton_3.toggled.connect(self.qiu)
        self.radioButton_4.toggled.connect(self.qiu)
        self.radioButton_5.toggled.connect(self.qiu)
        self.radioButton_6.toggled.connect(self.qiu)
        self.radioButton_7.toggled.connect(self.qiu)

    def qiu(self):
        if self.radioButton.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(85, 255, 255);")
        if self.radioButton_2.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(85, 255, 255);")
        if self.radioButton_3.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(85, 255, 255);")
        if self.radioButton_4.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(85, 255, 255);")
        if self.radioButton_5.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(85, 255, 255);")
        if self.radioButton_6.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(85, 255, 255);")
        if self.radioButton_7.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_9.setStyleSheet("background-color: rgb(85, 255, 255);")

    #气体选择
    def qiti(self):
        global R, Rm, M
        R = 8314.472
        A = self.comboBox.currentText()
        if A == "氦气":
            M = 4.0026;
            Rm = R / M
            self.lineEdit_5.setText("1.666")
            self.lineEdit_9.setText(str(Rm))
        if A == "氩气":
            M = 39.948;
            Rm = R / M
            self.lineEdit_5.setText("1.665")
            self.lineEdit_9.setText(str(Rm))
        if A == "氢气":
            M = 2.01588;
            Rm = R / M
            self.lineEdit_5.setText("1.405")
            self.lineEdit_9.setText(str(Rm))
        if A == "氧气":
            M = 32;
            Rm = R / M
            self.lineEdit_5.setText("1.396")
            self.lineEdit_9.setText(str(Rm))
        if A == "氮气":
            M = 28.0135;
            Rm = R / M
            self.lineEdit_5.setText("1.400")
            self.lineEdit_9.setText(str(Rm))
        if A == "二氧化碳":
            M = 44.0098;
            Rm = R / M
            self.lineEdit_5.setText("1.399")
            self.lineEdit_9.setText(str(Rm))
        if A == "空气":
            M = 28.959;
            Rm = R / M
            self.lineEdit_5.setText("1.400")
            self.lineEdit_9.setText(str(Rm))

    def box(self):
        self.qiti()
        self.jisuan()

    def jisuan(self):
        global T1,T0,  P1, P2, k, m1, m2, V, Rm, T2
        T0 = 273.15
        T1 = self.lineEdit.text()
        T2= self.lineEdit_2.text()
        P1 = self.lineEdit_3.text()
        P2 = self.lineEdit_4.text()
        k = self.lineEdit_5.text()
        m1 = self.lineEdit_6.text()
        m2 = self.lineEdit_7.text()
        V = self.lineEdit_8.text()
        Rm = self.lineEdit_9.text()
        if self.radioButton.isChecked():
            if T2==None or P1==None or P2 == None or P1 == "" or P2=="" or T2=="" or k==None or k=="" or\
                float(P2)<0 or float(P1)<0 or float(k)<0:
                QMessageBox.information(None, "提示说明", "计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                T2=float(T2)+T0
                P1 = float(P1)
                P2 = float(P2)
                k=float(k)
                T1=T2/np.power(P2/P1,(k-1)/k)-T0
                self.lineEdit.setText(str(T1))
                self.qiti()
        if self.radioButton_2.isChecked():
            if T1==None or P1==None or P2 == None or P1 == "" or P2=="" or T1=="" or k==None or k=="" or\
                 float(P2)<0 or float(P1)<0 or float(k)<0:
                QMessageBox.information(None, "提示说明", "计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                T1=float(T1)+T0
                P1 = float(P1)
                P2 = float(P2)
                k = float(k)
                T2=T1*np.power(P2/P1,(k-1)/k)-T0
                self.lineEdit_2.setText(str(T2))
                self.qiti()
        if self.radioButton_3.isChecked():
            if T1==None or T2==None or P2 == None or T2 == "" or P2=="" or T1=="" or k==None or k=="" or\
                float(P2)<0 or float(k)<0:
                QMessageBox.information(None, "提示说明", "计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                T1=float(T1)+T0
                T2 = float(T2)+T0
                P2 = float(P2)
                k = float(k)
                P1 = P2 /np.power(T2 / T1, k/(k - 1))
                self.lineEdit_3.setText(str(P1))
                self.qiti()
        if self.radioButton_4.isChecked():
            if T1==None or T2==None or P1 == None or T2 == "" or P1=="" or T1=="" or k==None or k=="" or\
                float(P1)<0 or float(k)<0:
                QMessageBox.information(None, "提示说明", "计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                T1=float(T1)+T0
                T2 = float(T2)+T0
                P1 = float(P1)
                k = float(k)
                P2 = P1*np.power(T2/T1,k/(k - 1))
                self.lineEdit_4.setText(str(P2))
                self.qiti()
        if self.radioButton_7.isChecked():
            if T1 == None or P1 == None or P1 == "" or T1 == "" or k == None or k == "" or m2 == None or m2 == "" or \
                    V == None or V == "" or Rm == None or Rm == "" or float(m2) < 0 or float(V) < 0 or float(Rm) < 0 or \
                    float(P1) < 0 or float(k) < 0 or P2 == "" or P2 == None or float(P2) < 0:
                QMessageBox.information(None, "提示说明", "计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                T1=float(T1)+T0
                P1 = float(P1)
                P2 = float(P2)
                k = float(k)
                m2=float(m2)
                V=float(V)
                Rm=float(Rm)
                m1=m2+P1*V*(1-np.power(P2/P1,1/k))/(Rm*T1)
                self.lineEdit_6.setText(str(m1))
                self.qiti()
        if self.radioButton_5.isChecked():
            if T1 == None or P1 == None or P1 == "" or T1 == "" or k == None or k == "" or m1==None or m1=="" or\
                 V==None or V=="" or Rm==None or Rm=="" or float(m1)<0 or float(V)<0  or float(Rm)<0 or\
                    float(P1) < 0 or float(k) < 0 or P2 == "" or P2 == None or float(P2) < 0:
                QMessageBox.information(None, "提示说明", "计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                T1 = float(T1) + T0
                P1 = float(P1)
                P2 = float(P2)
                k = float(k)
                m1 = float(m1)
                V = float(V)
                Rm = float(Rm)
                m2 = m1 - P1 * V * (1 - np.power(P2 / P1, 1 / k)) / (Rm * T1)
                self.lineEdit_7.setText(str(m2))
                self.qiti()
        if self.radioButton_6.isChecked():
            if T1 == None or P1 == None or P1 == "" or T1 == "" or k == None or k == "" or m1==None or m1=="" or\
                 m2==None or m2=="" or Rm==None or Rm=="" or float(m1)<0 or float(m2)<0  or float(Rm)<0 or\
                    float(P1) < 0 or float(k) < 0 or P2 == "" or P2 == None or float(P2) < 0:
                QMessageBox.information(None, "提示说明", "计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                T1 = float(T1) + T0
                P1 = float(P1)
                P2 = float(P2)
                k = float(k)
                m1 = float(m1)
                m2 = float(m2)
                Rm = float(Rm)
                V = round((m1-m2)*Rm * T1/(P1 * (1 - np.power(P2 / P1, 1 / k))), 5)
                self.lineEdit_8.setText(str(V))
                self.qiti()
        self.shuju()

    def datetime(self):
        global now_time
        now_time= datetime.datetime.now().strftime("%Y.%m.%d %H:%M:%S")

    def shuju(self):
        self.datetime()
        A = self.comboBox.currentText()
        Rm = self.lineEdit_9.text()
        def sql_insert(con, data):
            cursor = con.cursor()
            cursor.execute("insert into 绝热放气 (日期,气体类型,放气前容器中温度T1,放气后容器中温度T2,放气前气体压力P1,放气后气体压力P2,等熵指数k,放气前气体质量m1,放气后气体质量m2,容器体积V,气体常数Rm) values(?,?,?,?,?,?,?,?,?,?,?)",
                           data)
            con.commit()
        data = (now_time,A,T1,T2,P1,P2, k, m1, m2, V, Rm)
        sql_insert(con, data)


    def retranslateUi(self, juerefangqi):
        _translate = QtCore.QCoreApplication.translate
        juerefangqi.setWindowTitle(_translate("juerefangqi", "绝热放气计算V1.1 By ChengLiang"))
        self.label.setText(_translate("juerefangqi", "绝热放气计算"))
        self.pushButton.setText(_translate("juerefangqi", "计算"))
        self.label_4.setText(_translate("juerefangqi", "放气后容器中温度T2（℃）"))
        self.label_5.setText(_translate("juerefangqi", "放气前气体压力P1（MPa）"))
        self.label_6.setText(_translate("juerefangqi", "放气后气体压力P2（MPa）"))
        self.label_3.setText(_translate("juerefangqi", "放气前容器中温度T1（℃）"))
        self.label_10.setText(_translate("juerefangqi", "<html><head/><body><p align=\"center\">T<span style=\" vertical-align:sub;\">2</span>=T<span style=\" vertical-align:sub;\">1</span>(P<span style=\" vertical-align:sub;\">2</span>/P<span style=\" vertical-align:sub;\">1</span>)<span style=\" vertical-align:super;\">(k-1)/k</span></p><p align=\"center\">P<span style=\" vertical-align:sub;\">2</span>=P<span style=\" vertical-align:sub;\">1</span>(T<span style=\" vertical-align:sub;\">2</span>/T<span style=\" vertical-align:sub;\">1</span>)<span style=\" vertical-align:super;\">K/(k-1)</span></p><p align=\"center\">m<span style=\" vertical-align:sub;\">2=</span>m<span style=\" vertical-align:sub;\">1</span>-P<span style=\" vertical-align:sub;\">1</span>V(1-(P<span style=\" vertical-align:sub;\">2</span>/P<span style=\" vertical-align:sub;\">1</span>)<span style=\" vertical-align:super;\">1/k</span>)/(R<span style=\" vertical-align:sub;\">m</span>T<span style=\" vertical-align:sub;\">1</span>)</p></body></html>"))
        self.label_7.setText(_translate("juerefangqi", "等熵指数k "))
        self.label_8.setText(_translate("juerefangqi", "放气前气体质量m1（g）"))
        self.label_9.setText(_translate("juerefangqi", "容器体积V（mL）"))
        self.label_11.setText(_translate("juerefangqi", "气体常数Rm（J/kgK）"))
        self.label_12.setText(_translate("juerefangqi", "放气后气体质量m2（g）"))
        self.comboBox.setItemText(0, _translate("juerefangqi", "氦气"))
        self.comboBox.setItemText(1, _translate("juerefangqi", "氩气"))
        self.comboBox.setItemText(2, _translate("juerefangqi", "氢气"))
        self.comboBox.setItemText(3, _translate("juerefangqi", "氧气"))
        self.comboBox.setItemText(4, _translate("juerefangqi", "氮气"))
        self.comboBox.setItemText(5, _translate("juerefangqi", "二氧化碳"))
        self.comboBox.setItemText(6, _translate("juerefangqi", "二氧化碳"))
        self.label_2.setText(_translate("juerefangqi", "气体"))
        self.radioButton.setText(_translate("juerefangqi", "求"))
        self.radioButton_2.setText(_translate("juerefangqi", "求"))
        self.radioButton_3.setText(_translate("juerefangqi", "求"))
        self.radioButton_4.setText(_translate("juerefangqi", "求"))
        self.radioButton_5.setText(_translate("juerefangqi", "求"))
        self.radioButton_6.setText(_translate("juerefangqi", "求"))
        self.radioButton_7.setText(_translate("juerefangqi", "求"))
import img_rc
import sys
if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    Mainwidow = QtWidgets.QMainWindow()  # 创建窗体对象
    ui = Ui_juerefangqi()  # 创建QT设计的窗体
    ui.setupUi(Mainwidow)  # 初始化设置
    Mainwidow.show()  # 显示窗体
    sys.exit(app.exec_())  # 程序关闭时退出进程