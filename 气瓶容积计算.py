# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '气瓶容积计算.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow,QMessageBox
import numpy as np
from PyQt5.QtGui import *
import sqlite3
import datetime
from sqlite3 import Error

#连接数据库
def sql_connection():
    try:
        # con = sqlite3.connect("气瓶容积计算数据库.db")
        con = sqlite3.connect("公式集合数据库.db")
        return con
    except Error:
        print(Error)
#创建表
def sql_table(con):
    try:
        # 创建游标
        cursor = con.cursor()
        cursor.execute("create table 气瓶容积 (日期,内径D1,圆柱长L1,椭球高度H,椭球圆柱长L2,球形内径D2,圆柱形容积V,椭球形容积V2,球形容积V3)")
        # 提交事务
        con.commit()
    except Error:
        print(Error)
con = sql_connection()
sql_table(con)


class Ui_qipingrongji(QMainWindow):
    def setupUi(self, qipingrongji):
        qipingrongji.setObjectName("qipingrongji")
        qipingrongji.resize(790, 600)
        qipingrongji.setMaximumSize(QtCore.QSize(790, 600))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(20)
        qipingrongji.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/PNG/chengliang.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        qipingrongji.setWindowIcon(icon)
        qipingrongji.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label = QtWidgets.QLabel(qipingrongji)
        self.label.setGeometry(QtCore.QRect(0, 0, 780, 60))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(qipingrongji)
        self.label_2.setGeometry(QtCore.QRect(20, 80, 170, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(qipingrongji)
        self.label_3.setGeometry(QtCore.QRect(20, 120, 170, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(qipingrongji)
        self.label_4.setGeometry(QtCore.QRect(20, 160, 170, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.lineEdit = QtWidgets.QLineEdit(qipingrongji)
        self.lineEdit.setGeometry(QtCore.QRect(210, 80, 160, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(qipingrongji)
        self.lineEdit_2.setGeometry(QtCore.QRect(210, 120, 160, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(qipingrongji)
        self.lineEdit_3.setEnabled(True)
        self.lineEdit_3.setGeometry(QtCore.QRect(210, 160, 160, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.pushButton = QtWidgets.QPushButton(qipingrongji)
        self.pushButton.setGeometry(QtCore.QRect(320, 480, 100, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(20)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(0, 170, 127);")
        self.pushButton.setObjectName("pushButton")
        self.lineEdit_5 = QtWidgets.QLineEdit(qipingrongji)
        self.lineEdit_5.setEnabled(True)
        self.lineEdit_5.setGeometry(QtCore.QRect(580, 80, 180, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(qipingrongji)
        self.lineEdit_6.setEnabled(True)
        self.lineEdit_6.setGeometry(QtCore.QRect(580, 160, 180, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.lineEdit_6.setFont(font)
        self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.label_8 = QtWidgets.QLabel(qipingrongji)
        self.label_8.setGeometry(QtCore.QRect(390, 240, 180, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.label_7 = QtWidgets.QLabel(qipingrongji)
        self.label_7.setGeometry(QtCore.QRect(390, 160, 180, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.lineEdit_7 = QtWidgets.QLineEdit(qipingrongji)
        self.lineEdit_7.setEnabled(True)
        self.lineEdit_7.setGeometry(QtCore.QRect(580, 240, 180, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.lineEdit_7.setFont(font)
        self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.label_6 = QtWidgets.QLabel(qipingrongji)
        self.label_6.setGeometry(QtCore.QRect(390, 80, 180, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.textBrowser = QtWidgets.QTextBrowser(qipingrongji)
        self.textBrowser.setGeometry(QtCore.QRect(30, 340, 721, 111))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        self.textBrowser.setFont(font)
        self.textBrowser.setStyleSheet("background-color: rgb(85, 170, 255);")
        self.textBrowser.setObjectName("textBrowser")
        self.label_5 = QtWidgets.QLabel(qipingrongji)
        self.label_5.setGeometry(QtCore.QRect(20, 200, 170, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.lineEdit_4 = QtWidgets.QLineEdit(qipingrongji)
        self.lineEdit_4.setEnabled(True)
        self.lineEdit_4.setGeometry(QtCore.QRect(210, 200, 160, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.label_9 = QtWidgets.QLabel(qipingrongji)
        self.label_9.setGeometry(QtCore.QRect(20, 240, 170, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_9.setFont(font)
        self.label_9.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_9.setObjectName("label_9")
        self.lineEdit_8 = QtWidgets.QLineEdit(qipingrongji)
        self.lineEdit_8.setEnabled(True)
        self.lineEdit_8.setGeometry(QtCore.QRect(210, 240, 160, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.lineEdit_8.setFont(font)
        self.lineEdit_8.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.radioButton = QtWidgets.QRadioButton(qipingrongji)
        self.radioButton.setGeometry(QtCore.QRect(100, 290, 80, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.radioButton.setFont(font)
        self.radioButton.setAcceptDrops(False)
        self.radioButton.setToolTipDuration(-1)
        self.radioButton.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(qipingrongji)
        self.radioButton_2.setGeometry(QtCore.QRect(190, 290, 150, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.radioButton_2.setObjectName("radioButton_2")
        self.checkBox = QtWidgets.QCheckBox(qipingrongji)
        self.checkBox.setGeometry(QtCore.QRect(350, 290, 120, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.checkBox.setFont(font)
        self.checkBox.setObjectName("checkBox")
        self.checkBox.setChecked(True)
        self.checkBox_2 = QtWidgets.QCheckBox(qipingrongji)
        self.checkBox_2.setGeometry(QtCore.QRect(480, 290, 120, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.checkBox_2.setFont(font)
        self.checkBox_2.setObjectName("checkBox_2")
        self.checkBox_3 = QtWidgets.QCheckBox(qipingrongji)
        self.checkBox_3.setGeometry(QtCore.QRect(610, 290, 100, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.checkBox_3.setFont(font)
        self.checkBox_3.setObjectName("checkBox_3")

        self.retranslateUi(qipingrongji)
        QtCore.QMetaObject.connectSlotsByName(qipingrongji)


        self.radioButton.setChecked(True)

        #设置数字输入
        self.lineEdit.setValidator(QDoubleValidator())
        self.lineEdit_2.setValidator(QDoubleValidator())
        self.lineEdit_3.setValidator(QDoubleValidator())
        self.lineEdit_4.setValidator(QDoubleValidator())
        self.lineEdit_5.setValidator(QDoubleValidator())
        self.lineEdit_6.setValidator(QDoubleValidator())
        self.lineEdit_7.setValidator(QDoubleValidator())
        self.lineEdit_8.setValidator(QDoubleValidator())


        #设置信号
        self.pushButton.clicked.connect(self.jisuan)
        self.radioButton.toggled.connect(self.cleck)
        self.radioButton_2.toggled.connect(self.cleck)

        # 设置输入框的清除按钮及初始值
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit_2.setClearButtonEnabled(True)
        self.lineEdit_3.setClearButtonEnabled(True)
        self.lineEdit_4.setClearButtonEnabled(True)
        self.lineEdit_5.setClearButtonEnabled(True)
        self.lineEdit_6.setClearButtonEnabled(True)
        self.lineEdit_7.setClearButtonEnabled(True)
        self.lineEdit_8.setClearButtonEnabled(True)




    def retranslateUi(self, qipingrongji):
        _translate = QtCore.QCoreApplication.translate
        qipingrongji.setWindowTitle(_translate("qipingrongji", "气瓶容积计算V2.1 By ChengLiang"))
        self.label.setText(_translate("qipingrongji", "气瓶容积计算"))
        self.label_2.setText(_translate("qipingrongji", "内径D1mm"))
        self.label_3.setText(_translate("qipingrongji", "圆柱长L1mm"))
        self.label_4.setText(_translate("qipingrongji", "椭球高度Hmm"))
        self.radioButton.setText(_translate("qipingrongji", "求容积"))
        self.radioButton_2.setText(_translate("qipingrongji", "求内径、长度"))
        self.pushButton.setText(_translate("qipingrongji", "计算"))
        self.label_8.setText(_translate("qipingrongji", "球形容积V3 mL"))
        self.label_7.setText(_translate("qipingrongji", "椭球形容积V2 mL"))
        self.label_6.setText(_translate("qipingrongji", "圆柱形容积V1 mL"))
        self.textBrowser.setHtml(_translate("qipingrongji",
                                            "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                            "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                                            "p, li { white-space: pre-wrap; }\n"
                                            "</style></head><body style=\" font-family:\'楷体\'; font-size:16pt; font-weight:400; font-style:normal;\">\n"
                                            "<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\';\">                     V1=Π×R</span><span style=\" font-family:\'SimSun\'; vertical-align:sub;\">1</span><span style=\" font-family:\'SimSun\'; vertical-align:super;\">2</span><span style=\" font-family:\'SimSun\';\">×L1+4×Π×R</span><span style=\" font-family:\'SimSun\'; vertical-align:sub;\">1</span><span style=\" font-family:\'SimSun\'; vertical-align:super;\">3</span><span style=\" font-family:\'SimSun\';\">/3</span></p>\n"
                                            "<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\';\">                     V2=Π×R</span><span style=\" font-family:\'SimSun\'; vertical-align:sub;\">1</span><span style=\" font-family:\'SimSun\'; vertical-align:super;\">2</span><span style=\" font-family:\'SimSun\';\">×L2+4×Π×R</span><span style=\" font-family:\'SimSun\'; vertical-align:sub;\">1</span><span style=\" font-family:\'SimSun\'; vertical-align:super;\">2</span><span style=\" font-family:\'SimSun\';\">×H/3</span></p>\n"
                                            "<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\';\">                     V3=4×Π×R</span><span style=\" font-family:\'SimSun\'; vertical-align:sub;\">2</span><span style=\" font-family:\'SimSun\'; vertical-align:super;\">3</span><span style=\" font-family:\'SimSun\';\">/3</span></p></body></html>"))
        self.label_5.setText(_translate("qipingrongji", "椭球圆柱长L2mm"))
        self.label_9.setText(_translate("qipingrongji", "球形内径D2mm"))
        self.checkBox.setText(_translate("ylrq", "圆柱形容积"))
        self.checkBox_2.setText(_translate("ylrq", "椭球形容积"))
        self.checkBox_3.setText(_translate("ylrq", "球形容积"))

    def jisuan(self):
        global D1,L1,L2,D2,H,V1,V2,V3
        D1 = self.lineEdit.text()
        L1 = self.lineEdit_2.text()
        H = self.lineEdit_3.text()
        L2 = self.lineEdit_4.text()
        V1 = self.lineEdit_5.text()
        V2 = self.lineEdit_6.text()
        V3 = self.lineEdit_7.text()
        D2 = self.lineEdit_8.text()
        if self.radioButton.isChecked():
            if self.checkBox.isChecked() == False and self.checkBox_2.isChecked() == False and self.checkBox_3.isChecked() == False:
                QMessageBox.information(None, "使用提示", "请选择气瓶容积计算类型！", QMessageBox.Ok)
            else:
                if D1 == None or D1 == "" or float(D1) <= 0:
                    QMessageBox.information(None, "使用提示", "内径D1输入数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
                if self.checkBox.isChecked():
                    if L1 == None or L1 == "" or float(L1) <= 0:
                        QMessageBox.information(None, "使用提示", "圆柱段L1长输入数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
                    else:
                        D1 = float(D1)
                        L1 = float(L1)
                        V1 = round(np.pi * L1 * np.power(D1 / 2, 2) + 4 * np.pi * np.power(D1 / 2, 3) / 3, 4)
                        self.lineEdit_5.setText(str(V1 / 1000))
                if self.checkBox_2.isChecked():
                    if H == None or H == "" or float(H) < float(D1) / 4 or L2 == None or L2 == "" or float(
                            L2) <= 0 or float(D1) / 2 < float(H):
                        QMessageBox.information(None, "使用提示", "椭球高度H或输入数据不完整或错误且D1/4<椭球高度H<D1/2，请检查后重新输入！",
                                                QMessageBox.Ok)
                    else:
                        D1 = float(D1)
                        H = float(H)
                        L2 = float(L2)
                        V2 = round(np.pi * L2 * np.power(D1 / 2, 2) + 4 * np.pi * np.power(D1 / 2, 2) * H / 3, 4)
                        self.lineEdit_6.setText(str(V2 / 1000))
                if self.checkBox_3.isChecked():
                    if D2 == None or D2 == "" or float(D2) <= 0:
                        QMessageBox.information(None, "使用提示", "请输入球形内径D2！", QMessageBox.Ok)
                    else:
                        D2 = float(D2)
                        V3 = round(4 * np.pi * np.power(D2 / 2, 3) / 3, 4)
                        self.lineEdit_7.setText(str(V3 / 1000))

        elif self.radioButton_2.isChecked():
            if self.checkBox.isChecked() == False and self.checkBox_2.isChecked() == False and self.checkBox_3.isChecked() == False:
                QMessageBox.information(None, "使用提示", "请选择气瓶容积计算类型！", QMessageBox.Ok)
            else:
                if self.checkBox.isChecked():
                    if V1 == None or V1 == "" or float(V1) <= 0:
                        QMessageBox.information(None, "使用提示", "请输入圆柱形容积V1！", QMessageBox.Ok)
                    elif D1 == None or D1 == "" or float(D1) <= 0:
                        QMessageBox.information(None, "使用提示", "请输入圆柱形内径D1！", QMessageBox.Ok)
                    else:
                        D1 = float(D1)
                        V1 = float(V1)
                        L = round((V1 * 1000 - 4 * np.pi * np.power(D1 / 2, 3) / 3) / (np.pi * np.power(D1 / 2, 2)), 4)
                        self.lineEdit_2.setText(str(L))
                if self.checkBox_2.isChecked():
                    if V2 == None or V2 == "" or float(V2) <= 0:
                        QMessageBox.information(None, "使用提示", "请输入椭球形容积V2！", QMessageBox.Ok)
                    elif H == None or H == "" or float(D1) / 2 < float(H) or float(H) < float(D1) / 4 or \
                            D1 == None or D1 == "" or float(D1) <= 0:
                        QMessageBox.information(None, "使用提示", "请输入准确椭球形高度H（/4<椭球高度H<D1/2）或内径D1！", QMessageBox.Ok)
                    else:
                        V2 = float(V2)
                        H = float(H)
                        D1 = float(D1)
                        L2 = round(
                            (V2 * 1000 - 4 * np.pi * np.power(D1 / 2, 2) * H / 3) / (np.pi * np.power(D1 / 2, 2)), 4)
                        self.lineEdit_4.setText(str(L2))
                if self.checkBox_3.isChecked():
                    if V3 == None or V3 == "" or float(V3) <= 0:
                        QMessageBox.information(None, "使用提示", "请输入球形容积V3！", QMessageBox.Ok)
                    else:
                        V3 = float(V3)
                        D2 = round(2 * np.power((V3 * 1000 * 3 / (4 * np.pi)), 1 / 3), 4)
                        self.lineEdit_8.setText(str(D2))
        self.shuju()


    def datetime(self):
        global now_time
        now_time= datetime.datetime.now().strftime("%Y.%m.%d %H:%M:%S")

    def shuju(self):
        self.datetime()
        def sql_insert(con, data):
                cursor = con.cursor()
                cursor.execute("insert into 气瓶容积 (日期,内径D1,圆柱长L1,椭球高度H,椭球圆柱长L2,球形内径D2,圆柱形容积V,椭球形容积V2,球形容积V3) values(?,?,?,?,?,?,?,?,?)", data)
                con.commit()
        data = (now_time,D1,L1,H,L2,D2,V1,V2,V3)
        sql_insert(con, data)

    # 创建选择
    def cleck(self):
        if self.radioButton.isChecked():
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255;")
        elif self.radioButton_2.isChecked():
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(85, 255, 255);")

import img_rc

import sys
if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    Mainwidow = QtWidgets.QMainWindow()  # 创建窗体对象
    ui = Ui_qipingrongji()  # 创建QT设计的窗体
    ui.setupUi(Mainwidow)  # 初始化设置
    Mainwidow.show()  # 显示窗体
    sys.exit(app.exec_())  # 程序关闭时退出进程
