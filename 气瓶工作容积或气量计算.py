# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '气瓶工作容积或气量计算.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow,QMessageBox
import numpy as np
from sympy import *
from PyQt5.QtGui import *
import sqlite3
import datetime
from sqlite3 import Error

#连接数据库
def sql_connection():
    try:
        # con = sqlite3.connect("气瓶工作容积或气量计算数据库.db")
        con = sqlite3.connect("公式集合数据库.db")
        return con
    except Error:
        print(Error)
#创建表
def sql_table(con):
    try:
        # 创建游标
        cursor = con.cursor()
        cursor.execute("create table 气瓶工作容积或气量 (日期,气体类型,表压P1,表压P2,温度T,气体密度ρ1,气体密度ρ2,气瓶容积V,气瓶工作气量)")
        # 提交事务
        con.commit()
    except Error:
        print(Error)
con = sql_connection()
sql_table(con)

class Ui_qipingrongjihuoqiliang(QMainWindow):
    def setupUi(self, qipingrongjihuoqiliang):
        qipingrongjihuoqiliang.setObjectName("qipingrongjihuoqiliang")
        qipingrongjihuoqiliang.setWindowModality(QtCore.Qt.NonModal)
        qipingrongjihuoqiliang.setEnabled(True)
        qipingrongjihuoqiliang.resize(1230, 550)
        qipingrongjihuoqiliang.setMaximumSize(QtCore.QSize(1230, 550))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        qipingrongjihuoqiliang.setFont(font)
        qipingrongjihuoqiliang.setMouseTracking(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/PNG/chengliang.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        qipingrongjihuoqiliang.setWindowIcon(icon)
        qipingrongjihuoqiliang.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label = QtWidgets.QLabel(qipingrongjihuoqiliang)
        self.label.setGeometry(QtCore.QRect(0, 20, 1230, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(24)
        font.setKerning(True)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(qipingrongjihuoqiliang)
        self.pushButton.setGeometry(QtCore.QRect(520, 490, 110, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(18)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(85, 170, 255);")
        self.pushButton.setObjectName("pushButton")
        self.label_9 = QtWidgets.QLabel(qipingrongjihuoqiliang)
        self.label_9.setGeometry(QtCore.QRect(30, 430, 250, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_9.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_9.setObjectName("label_9")
        self.lineEdit_2 = QtWidgets.QLineEdit(qipingrongjihuoqiliang)
        self.lineEdit_2.setGeometry(QtCore.QRect(290, 180, 280, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_2.setText("")
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_2.setClearButtonEnabled(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.radioButton = QtWidgets.QRadioButton(qipingrongjihuoqiliang)
        self.radioButton.setGeometry(QtCore.QRect(220, 80, 240, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.radioButton.setFont(font)
        self.radioButton.setChecked(True)
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(qipingrongjihuoqiliang)
        self.radioButton_2.setGeometry(QtCore.QRect(470, 80, 240, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setObjectName("radioButton_2")
        self.label_2 = QtWidgets.QLabel(qipingrongjihuoqiliang)
        self.label_2.setGeometry(QtCore.QRect(20, 80, 50, 24))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.comboBox = QtWidgets.QComboBox(qipingrongjihuoqiliang)
        self.comboBox.setGeometry(QtCore.QRect(80, 80, 127, 28))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.lineEdit_7 = QtWidgets.QLineEdit(qipingrongjihuoqiliang)
        self.lineEdit_7.setEnabled(True)
        self.lineEdit_7.setGeometry(QtCore.QRect(290, 430, 280, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_7.setFont(font)
        self.lineEdit_7.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_7.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_7.setText("")
        self.lineEdit_7.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_7.setClearButtonEnabled(True)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.lineEdit_4 = QtWidgets.QLineEdit(qipingrongjihuoqiliang)
        self.lineEdit_4.setEnabled(True)
        self.lineEdit_4.setGeometry(QtCore.QRect(290, 280, 280, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_4.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_4.setText("")
        self.lineEdit_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_4.setClearButtonEnabled(True)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(qipingrongjihuoqiliang)
        self.lineEdit_5.setEnabled(True)
        self.lineEdit_5.setGeometry(QtCore.QRect(290, 330, 280, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_5.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_5.setClearButtonEnabled(True)
        self.lineEdit_6 = QtWidgets.QLineEdit(qipingrongjihuoqiliang)
        self.lineEdit_6.setEnabled(True)
        self.lineEdit_6.setGeometry(QtCore.QRect(290, 380, 280, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_6.setFont(font)
        self.lineEdit_6.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_6.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_6.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_6.setText("")
        self.lineEdit_6.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_6.setClearButtonEnabled(True)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.lineEdit = QtWidgets.QLineEdit(qipingrongjihuoqiliang)
        self.lineEdit.setGeometry(QtCore.QRect(290, 130, 280, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit.setFont(font)
        self.lineEdit.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit.setText("")
        self.lineEdit.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_3 = QtWidgets.QLineEdit(qipingrongjihuoqiliang)
        self.lineEdit_3.setEnabled(True)
        self.lineEdit_3.setGeometry(QtCore.QRect(290, 230, 280, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_3.setText("")
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_3.setClearButtonEnabled(True)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_8 = QtWidgets.QLabel(qipingrongjihuoqiliang)
        self.label_8.setGeometry(QtCore.QRect(30, 380, 250, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_8.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.label_4 = QtWidgets.QLabel(qipingrongjihuoqiliang)
        self.label_4.setGeometry(QtCore.QRect(30, 180, 250, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(qipingrongjihuoqiliang)
        self.label_5.setGeometry(QtCore.QRect(30, 230, 250, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(qipingrongjihuoqiliang)
        self.label_6.setGeometry(QtCore.QRect(30, 280, 250, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(qipingrongjihuoqiliang)
        self.label_7.setGeometry(QtCore.QRect(30, 330, 250, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_7.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.label_3 = QtWidgets.QLabel(qipingrongjihuoqiliang)
        self.label_3.setGeometry(QtCore.QRect(30, 130, 250, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.radioButton_3 = QtWidgets.QRadioButton(qipingrongjihuoqiliang)
        self.radioButton_3.setGeometry(QtCore.QRect(720, 80, 240, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.radioButton_3.setFont(font)
        self.radioButton_3.setObjectName("radioButton_3")
        self.textBrowser = QtWidgets.QTextBrowser(qipingrongjihuoqiliang)
        self.textBrowser.setGeometry(QtCore.QRect(590, 130, 611, 341))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(20)
        self.textBrowser.setFont(font)
        self.textBrowser.setStyleSheet("background:transparent;border-width:0;border-style:outset")
        self.textBrowser.setObjectName("textBrowser")
        self.radioButton_4 = QtWidgets.QRadioButton(qipingrongjihuoqiliang)
        self.radioButton_4.setGeometry(QtCore.QRect(970, 80, 230, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.radioButton_4.setFont(font)
        self.radioButton_4.setObjectName("radioButton_4")

        self.retranslateUi(qipingrongjihuoqiliang)
        QtCore.QMetaObject.connectSlotsByName(qipingrongjihuoqiliang)

        # 只允许输入数字
        self.lineEdit.setValidator(QDoubleValidator())
        self.lineEdit_2.setValidator(QDoubleValidator())
        self.lineEdit_3.setValidator(QDoubleValidator())
        self.lineEdit_4.setValidator(QDoubleValidator())
        self.lineEdit_5.setValidator(QDoubleValidator())
        self.lineEdit_6.setValidator(QDoubleValidator())
        self.lineEdit_7.setValidator(QDoubleValidator())

        #设置信号槽
        self.radioButton.toggled.connect(self.cleck)
        self.radioButton_2.toggled.connect(self.cleck)
        self.radioButton_3.toggled.connect(self.cleck)
        self.comboBox.currentIndexChanged.connect(self.box)
        self.pushButton.clicked.connect(self.jisuan)

    def retranslateUi(self, qipingrongjihuoqiliang):
        _translate = QtCore.QCoreApplication.translate
        qipingrongjihuoqiliang.setWindowTitle(_translate("qipingrongjihuoqiliang", "气瓶工作容积或气量计算V1.2 By ChengLiang ZBW"))
        self.label.setText(_translate("qipingrongjihuoqiliang", "气瓶工作容积或气量计算"))
        self.pushButton.setText(_translate("qipingrongjihuoqiliang", "计算"))
        self.label_9.setText(_translate("qipingrongjihuoqiliang", "气瓶工作气量m（g）"))
        self.radioButton.setText(_translate("qipingrongjihuoqiliang", "容积、压力差求气量"))
        self.radioButton_2.setText(_translate("qipingrongjihuoqiliang", "容积、表压P1求气量"))
        self.label_2.setText(_translate("qipingrongjihuoqiliang", "气体"))
        self.comboBox.setItemText(0, _translate("qipingrongjihuoqiliang", "氦气"))
        self.comboBox.setItemText(1, _translate("qipingrongjihuoqiliang", "氩气"))
        self.comboBox.setItemText(2, _translate("qipingrongjihuoqiliang", "氢气"))
        self.comboBox.setItemText(3, _translate("qipingrongjihuoqiliang", "氧气"))
        self.comboBox.setItemText(4, _translate("qipingrongjihuoqiliang", "氮气"))
        self.comboBox.setItemText(5, _translate("qipingrongjihuoqiliang", "二氧化碳"))
        self.label_8.setText(_translate("qipingrongjihuoqiliang", "气瓶容积V（mL）"))
        self.label_4.setText(_translate("qipingrongjihuoqiliang", "表压P2（MPa）"))
        self.label_5.setText(_translate("qipingrongjihuoqiliang", "温度T（℃）"))
        self.label_6.setText(_translate("qipingrongjihuoqiliang", "气体密度ρ1（g/mL）"))
        self.label_7.setText(_translate("qipingrongjihuoqiliang", "气体密度ρ2（g/mL）"))
        self.label_3.setText(_translate("qipingrongjihuoqiliang", "表压P1（MPa）"))
        self.radioButton_3.setText(_translate("qipingrongjihuoqiliang", "压力差气量求容积"))
        self.textBrowser.setHtml(_translate("qipingrongjihuoqiliang", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'楷体\'; font-size:20pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">范德瓦尔方程</p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\'; font-size:24pt;\">P=RT/(M(1/ρ-b/M))-ρ</span><span style=\" font-family:\'SimSun\'; font-size:24pt; vertical-align:super;\">2</span><span style=\" font-family:\'SimSun\'; font-size:24pt;\">a/M</span><span style=\" font-family:\'SimSun\'; font-size:24pt; vertical-align:super;\">2</span></p>\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'SimSun\'; font-size:24pt; vertical-align:super;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\';\"> P——气体压力</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\';\"> R——气体常数</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\';\"> T——绝对温度</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\';\"> a——度量分子间引力的参数</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\';\"> b——每个分子平均占有的空间大小</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\';\"> M——摩尔质量</span></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'SimSun\';\">ρ——气体密度</span></p></body></html>"))
        self.radioButton_4.setText(_translate("qipingrongjihuoqiliang", "表压P1气量求容积"))

    global Tc, Pc, M, Omega
    Tc = 5.25;
    Pc = 0.22697;
    M = 4.0026;
    Omega = -0.390;

    #计算方式选择
    def cleck(self):
        if self.radioButton.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.clear()
            self.lineEdit_5.clear()
            self.lineEdit_7.clear()
        if self.radioButton_2.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.clear()
            self.lineEdit_4.clear()
            self.lineEdit_5.clear()
            self.lineEdit_7.clear()
        if self.radioButton_3.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.clear()
            self.lineEdit_5.clear()
            self.lineEdit_6.clear()
        if self.radioButton_4.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.clear()
            self.lineEdit_4.clear()
            self.lineEdit_5.clear()
            self.lineEdit_6.clear()

    # 气体选择
    def qiti(self):
        global Tc, Pc, M, Omega
        A = self.comboBox.currentText()
        if A == "氦气":
            Tc = 5.25;
            Pc = 0.22697;
            M = 4.0026;
            Omega = -0.390;
        if A == "氩气":
            Tc = 150.86;
            Pc = 4.898;
            M = 39.948;
            Omega = 0.000;
        if A == "氢气":
            Tc = 33.2;
            Pc = 1.29728;
            M = 2.01588;
            Omega = -0.220;
        if A == "氧气":
            Tc = 154.59;
            Pc = 5.043;
            M = 32;
            Omega = 0.022;
        if A == "氮气":
            Tc = 126.1;
            Pc = 3.394;
            M = 28.0135;
            Omega = 0.040;
        if A == "二氧化碳":
            Tc = 304.1282;
            Pc = 7.3773;
            M = 44.0098;
            Omega = 0.22394;

    def box(self):
        self.qiti()
        self.jisuan()

    #设置参数
    def canshu(self):
        global P1, P2, T1, ρ1, ρ2, T2,V,  m, a, b, P0, T0, V0, R, Tc, Pc, m, Omega, Alpha, Rg, Vm, ρ
        P1=self.lineEdit.text()
        P2 = self.lineEdit_2.text()
        T1= self.lineEdit_3.text()
        ρ1=self.lineEdit_4.text()
        ρ2 = self.lineEdit_5.text()
        V=self.lineEdit_6.text()
        m=self.lineEdit_7.text()

    #计算
    def jisuan(self):
        self.canshu()
        global P1, T1, ρ1, ρ2, T2, m, V, P2, a, b, P0, T0, V0, R, Tc, Pc, m, Omega, Alpha, Rg, Vm, ρ
        if self.radioButton.isChecked():
            self.qiyaP1()
            self.qiyaP2()
            if V == None or V == "" or float(V) < 0:
                QMessageBox.information(None, "使用提示", "气瓶容积V计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                V = float(V)
                ρ = float(ρ1) - float(ρ2)
                m = round(V * ρ, 10)
                self.lineEdit_7.setText(str(m))
        if self.radioButton_2.isChecked():
            self.qiyaP1()
            if V == None or V == "" or float(V) < 0:
                QMessageBox.information(None, "使用提示", "气瓶容积V计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                V = float(V)
                m = round(V * float(ρ1), 10)
                self.lineEdit_7.setText(str(m))
        if self.radioButton_3.isChecked():
            self.qiyaP1()
            self.qiyaP2()
            if m == None or m == "" or float(m) < 0:
                QMessageBox.information(None, "使用提示", "气体工作气量m计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                m = float(m)
                ρ = float(ρ1) - float(ρ2)
                V = round(m / ρ, 10)
                self.lineEdit_6.setText(str(V))
        if self.radioButton_4.isChecked():
            self.qiyaP1()
            if m == None or m == "" or float(m) < 0:
                QMessageBox.information(None, "使用提示", "气体工作气量m计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                m = float(m)
                V = round(m / float(ρ1), 10)
                self.lineEdit_6.setText(str(V))

    def qiyaP1(self):
        self.canshu()
        global P1, T1, ρ1, ρ2, T2, m, V, P2, a, b, P0, T0, V0, R, Tc, Pc, m, Omega, Alpha, Rg, Vm, ρ
        P0 = 101.325 * 0.001
        V0 = 22.414 * 1000
        T0 = 273.15
        R = 8.314472
        if T1 == None or T1 == "" or P1 == None or P1 == "" or float(P1) < 0:
            QMessageBox.information(None, "使用提示", "请输入温度T！表压P1计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
        else:
            T1 = float(T1) + T0
            Tr = T1 / Tc
            a = 0.42748 * np.power(R, 2) * np.power(Tc, 2) / Pc
            b = 0.08664 * R * Tc / Pc
            Alpha = np.power(1 + (0.48508 + 1.55171 * Omega - 0.15613 * np.power(Omega, 2)) * (1 - np.power(Tr, 0.5)),2)
            Rg = P0 * V0 / T0 / M
            P1 = float(P1) + P0
            ρ1 = Symbol('ρ1')
            Vm = R / (ρ1 * Rg)
            ρ1 = solve([R * T1 / (Vm - b) - a * Alpha / (Vm * (Vm + b)) - P1], [ρ1])  # 计算密度
            ρ1 = ','.join(str(i) for i in ρ1[0])  # 取结果的数值 不是复数 且去除括号
            self.lineEdit_4.setText(str(ρ1))


    def qiyaP2(self):
        self.canshu()
        global P1, P2, T1, ρ1, ρ2, T2, m, V, a, b, P0, T0, V0, R, Tc, Pc, m, Omega, Alpha, Rg, Vm, ρ
        P0 = 101.325 * 0.001
        V0 = 22.414 * 1000
        T0 = 273.15
        R = 8.314472
        if T1==None or T1=="" or P2 == None or P2 == "" or float(P2) < 0:
            QMessageBox.information(None, "使用提示", "请输入温度T！表压P2计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
        else:
            T1 = float(T1) + T0
            Tr = T1 / Tc
            a = 0.42748 * np.power(R, 2) * np.power(Tc, 2) / Pc
            b = 0.08664 * R * Tc / Pc
            Alpha = np.power(1 + (0.48508 + 1.55171 * Omega - 0.15613 * np.power(Omega, 2)) * (1 - np.power(Tr, 0.5)),2)
            Rg = P0 * V0 / T0 / M
            P2 = float(P2) + P0
            ρ2 = Symbol('ρ2')
            Vm = R / (ρ2 * Rg)
            ρ2 = solve([R * T1 / (Vm - b) - a * Alpha / (Vm * (Vm + b)) - P2], [ρ2])  # 计算密度
            ρ2 = ','.join(str(i) for i in ρ2[0])  # 取结果的数值 不是复数 且去除括号
            self.lineEdit_5.setText(str(ρ2))
        self.shuju()

    def datetime(self):
        global now_time
        now_time= datetime.datetime.now().strftime("%Y.%m.%d %H:%M:%S")

    def shuju(self):
        self.datetime()
        A = self.comboBox.currentText()
        def sql_insert(con, data):
            cursor = con.cursor()
            cursor.execute("insert into 气瓶工作容积或气量 (日期,气体类型,表压P1,表压P2,温度T,气体密度ρ1,气体密度ρ2,气瓶容积V,气瓶工作气量) values(?,?,?,?,?,?,?,?,?)",
                           data)
            con.commit()
        data = (now_time,A,P1, P2, T1, ρ1, ρ2, V,  m)
        sql_insert(con, data)



import img_rc
import sys
if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    Mainwidow = QtWidgets.QMainWindow()  # 创建窗体对象
    ui = Ui_qipingrongjihuoqiliang()  # 创建QT设计的窗体
    ui.setupUi(Mainwidow)  # 初始化设置
    Mainwidow.show()  # 显示窗体
    sys.exit(app.exec_())  # 程序关闭时退出进程