# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '流量与电流的比拟计算.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow,QMessageBox
from PyQt5.QtGui import *
import sqlite3
import datetime
from sqlite3 import Error

#连接数据库
def sql_connection():
    try:
        # con = sqlite3.connect("流量与电流的比拟计算数据库.db")
        con = sqlite3.connect("公式集合数据库.db")
        return con
    except Error:
        print(Error)
#创建表
def sql_table(con):
    try:
        # 创建游标
        cursor = con.cursor()
        cursor.execute("create table 流量与电流的比拟 (日期,已知流量,体积流量Qv,质量流量Qm,重量流量Qw,密度ρ,重力加速度g)")
        # 提交事务
        con.commit()
    except Error:
        print(Error)
con = sql_connection()
sql_table(con)


class Ui_liuliangdianliiu(QMainWindow):
    def setupUi(self, liuliangdianliiu):
        liuliangdianliiu.setObjectName("liuliangdianliiu")
        liuliangdianliiu.setWindowModality(QtCore.Qt.NonModal)
        liuliangdianliiu.setEnabled(True)
        liuliangdianliiu.resize(740, 500)
        liuliangdianliiu.setMaximumSize(QtCore.QSize(740, 500))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        liuliangdianliiu.setFont(font)
        liuliangdianliiu.setMouseTracking(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/PNG/chengliang.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        liuliangdianliiu.setWindowIcon(icon)
        liuliangdianliiu.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label = QtWidgets.QLabel(liuliangdianliiu)
        self.label.setGeometry(QtCore.QRect(0, 20, 740, 41))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(24)
        font.setKerning(True)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(liuliangdianliiu)
        self.pushButton.setGeometry(QtCore.QRect(600, 430, 110, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(18)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(85, 170, 255);")
        self.pushButton.setObjectName("pushButton")
        self.lineEdit_2 = QtWidgets.QLineEdit(liuliangdianliiu)
        self.lineEdit_2.setGeometry(QtCore.QRect(340, 200, 330, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_2.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.lineEdit_2.setText("")
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_2.setClearButtonEnabled(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.radioButton = QtWidgets.QRadioButton(liuliangdianliiu)
        self.radioButton.setGeometry(QtCore.QRect(200, 100, 160, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.radioButton.setFont(font)
        self.radioButton.setChecked(True)
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(liuliangdianliiu)
        self.radioButton_2.setGeometry(QtCore.QRect(380, 100, 160, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setObjectName("radioButton_2")
        self.lineEdit_4 = QtWidgets.QLineEdit(liuliangdianliiu)
        self.lineEdit_4.setEnabled(True)
        self.lineEdit_4.setGeometry(QtCore.QRect(340, 300, 330, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_4.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_4.setText("")
        self.lineEdit_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_4.setClearButtonEnabled(True)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(liuliangdianliiu)
        self.lineEdit_5.setGeometry(QtCore.QRect(340, 350, 330, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_5.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_5.setStyleSheet("")
        self.lineEdit_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_5.setClearButtonEnabled(True)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit = QtWidgets.QLineEdit(liuliangdianliiu)
        self.lineEdit.setGeometry(QtCore.QRect(340, 150, 330, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit.setFont(font)
        self.lineEdit.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit.setStyleSheet("")
        self.lineEdit.setText("")
        self.lineEdit.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_3 = QtWidgets.QLineEdit(liuliangdianliiu)
        self.lineEdit_3.setGeometry(QtCore.QRect(340, 250, 330, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_3.setStyleSheet("")
        self.lineEdit_3.setText("")
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_3.setClearButtonEnabled(True)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_4 = QtWidgets.QLabel(liuliangdianliiu)
        self.label_4.setGeometry(QtCore.QRect(70, 195, 250, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(liuliangdianliiu)
        self.label_5.setGeometry(QtCore.QRect(70, 250, 250, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(liuliangdianliiu)
        self.label_6.setGeometry(QtCore.QRect(70, 300, 250, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(liuliangdianliiu)
        self.label_7.setGeometry(QtCore.QRect(70, 350, 250, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_7.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.label_3 = QtWidgets.QLabel(liuliangdianliiu)
        self.label_3.setGeometry(QtCore.QRect(70, 150, 250, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.label_8 = QtWidgets.QLabel(liuliangdianliiu)
        self.label_8.setGeometry(QtCore.QRect(20, 420, 561, 61))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(20)
        font.setKerning(True)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("background-color: rgb(85, 170, 0);")
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.radioButton_3 = QtWidgets.QRadioButton(liuliangdianliiu)
        self.radioButton_3.setGeometry(QtCore.QRect(560, 100, 160, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.radioButton_3.setFont(font)
        self.radioButton_3.setObjectName("radioButton_3")
        self.comboBox = QtWidgets.QComboBox(liuliangdianliiu)
        self.comboBox.setGeometry(QtCore.QRect(70, 100, 120, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_9 = QtWidgets.QLabel(liuliangdianliiu)
        self.label_9.setGeometry(QtCore.QRect(10, 100, 50, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_9.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_9.setObjectName("label_9")

        self.retranslateUi(liuliangdianliiu)
        QtCore.QMetaObject.connectSlotsByName(liuliangdianliiu)

        #创建信号槽
        self.pushButton.clicked.connect(self.jisuan)
        self.comboBox.currentIndexChanged.connect(self.yizhi)
        self.radioButton.clicked.connect(self.yizhi)
        self.radioButton_2.clicked.connect(self.yizhi)
        self.radioButton_3.clicked.connect(self.yizhi)

        # 只允许输入数字
        self.lineEdit.setValidator(QDoubleValidator())
        self.lineEdit_2.setValidator(QDoubleValidator())
        self.lineEdit_3.setValidator(QDoubleValidator())
        self.lineEdit_4.setValidator(QDoubleValidator())
        self.lineEdit_5.setValidator(QDoubleValidator())


    def retranslateUi(self, liuliangdianliiu):
        _translate = QtCore.QCoreApplication.translate
        liuliangdianliiu.setWindowTitle(_translate("liuliangdianliiu", "流量与电流的比拟计算V1.1 By ChengLiang"))
        self.label.setText(_translate("liuliangdianliiu", "流量与电流的比拟计算"))
        self.pushButton.setText(_translate("liuliangdianliiu", "计算"))
        self.radioButton.setText(_translate("liuliangdianliiu", "计算体积流量"))
        self.radioButton_2.setText(_translate("liuliangdianliiu", "计算质量流量"))
        self.label_4.setText(_translate("liuliangdianliiu", "质量流量Qm（g/s）"))
        self.label_5.setText(_translate("liuliangdianliiu", "重量流量Qw（gm2/s2）"))
        self.label_6.setText(_translate("liuliangdianliiu", "密度ρ（g/L）"))
        self.label_7.setText(_translate("liuliangdianliiu", "重力加速度g（kg/s）"))
        self.label_3.setText(_translate("liuliangdianliiu", "体积流量Qv（L/s）"))
        self.label_8.setText(_translate("liuliangdianliiu", "Qv=Qm/ρ=Qw/ρg"))
        self.radioButton_3.setText(_translate("liuliangdianliiu", "计算重量流量"))
        self.comboBox.setItemText(0, _translate("liuliangdianliiu", "质量流量"))
        self.comboBox.setItemText(1, _translate("liuliangdianliiu", "体积流量"))
        self.comboBox.setItemText(2, _translate("liuliangdianliiu", "重量流量"))
        self.label_9.setText(_translate("liuliangdianliiu", "已知"))

    def yizhi(self):
        if self.radioButton.isChecked() == True and self.comboBox.currentText() == "质量流量":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit.clear()
            self.lineEdit_3.clear()
            self.lineEdit_5.clear()
        if self.radioButton.isChecked() == True and self.comboBox.currentText() == "重量流量":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.clear()
            self.lineEdit.clear()
        if self.radioButton.isChecked() == True and self.comboBox.currentText() == "体积流量":
            QMessageBox.information(None, "提示", "选择错误，请重新选择！",QMessageBox.Ok)
        if self.radioButton_2.isChecked() == True and self.comboBox.currentText() == "质量流量":
            QMessageBox.information(None, "提示", "选择错误，请重新选择！", QMessageBox.Ok)
        if self.radioButton_2.isChecked() == True and self.comboBox.currentText() == "重量流量":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.clear()
            self.lineEdit.clear()
            self.lineEdit_4.clear()
        if self.radioButton_2.isChecked() == True and self.comboBox.currentText() == "体积流量":
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.clear()
            self.lineEdit_5.clear()
            self.lineEdit_3.clear()
        if self.radioButton_3.isChecked() == True and self.comboBox.currentText() == "质量流量":
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit.clear()
            self.lineEdit_4.clear()
            self.lineEdit_3.clear()
        if self.radioButton_3.isChecked() == True and self.comboBox.currentText() == "重量流量":
            QMessageBox.information(None, "提示", "选择错误，请重新选择！", QMessageBox.Ok)
        if self.radioButton_3.isChecked() == True and self.comboBox.currentText() == "体积流量":
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.clear()
            self.lineEdit_3.clear()

    #创建参数
    def canshu(self):
        global Qv,Qm,  Qw, ρ, g
        Qv = self.lineEdit.text()
        Qm = self.lineEdit_2.text()
        Qw = self.lineEdit_3.text()
        ρ = self.lineEdit_4.text()
        g = self.lineEdit_5.text()


    #创建计算
    def jisuan(self):
        global Qv,Qm,Qw,ρ,g
        self.canshu()
        if self.radioButton.isChecked()==True and self.comboBox.currentText() == "质量流量":
            if Qm==None or Qm =="" or float(Qm)<0 or ρ==None or ρ=="" or float(ρ)<=0:
                QMessageBox.information(None, "使用提示", "质量流量或密度计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Qv = round(float(Qm) / float(ρ), 10)
                self.lineEdit.setText(str(Qv))
                self.lineEdit_3.clear()
                self.lineEdit_5.clear()
        if self.radioButton.isChecked()==True and self.comboBox.currentText() == "重量流量":
            if Qw == None or Qw == "" or float(Qw) < 0 or ρ == None or ρ == "" or float(ρ) <= 0 or \
                    g == None or g == "" or float(g) <= 0:
                QMessageBox.information(None, "使用提示", "重量流量或密度或重力加速度计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Qv = round(float(Qw) / (float(ρ) * float(g)), 10)
                self.lineEdit.setText(str(Qv))
                self.lineEdit_2.clear()
        if self.radioButton_2.isChecked()==True and self.comboBox.currentText() == "体积流量":
            if Qv==None or Qv =="" or float(Qv)<0 or ρ==None or ρ=="" or float(ρ)<=0:
                QMessageBox.information(None, "使用提示", "体积流量或密度计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Qm = round(float(Qv) * float(ρ), 10)
                self.lineEdit_2.setText(str(Qm))
                self.lineEdit_3.clear()
                self.lineEdit_5.clear()
        if self.radioButton_2.isChecked()==True and self.comboBox.currentText() == "重量流量":
            if Qw == None or Qw == "" or float(Qw) < 0 or g == None or g == "" or float(g) <= 0:
                QMessageBox.information(None, "使用提示", "重量流量或重力加速度计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Qm = round(float(Qw) / float(g), 10)
                self.lineEdit_2.setText(str(Qm))
                self.lineEdit.clear()
                self.lineEdit_4.clear()
        if self.radioButton_3.isChecked()==True and self.comboBox.currentText() == "体积流量":
            if Qv == None or Qv == "" or float(Qv) < 0 or g == None or g == "" or float(g) <= 0 or ρ==None or ρ=="" or float(ρ)<=0:
                QMessageBox.information(None, "使用提示", "体积流量或重力加速度或密度计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Qm = round(float(Qv) * float(ρ) * float(g), 10)
                self.lineEdit_3.setText(str(Qm))
                self.lineEdit_2.clear()
        if self.radioButton_3.isChecked()==True and self.comboBox.currentText() == "质量流量":
            if Qm == None or Qm == "" or float(Qm) < 0 or g == None or g == "" or float(g) <= 0:
                QMessageBox.information(None, "使用提示", "质量流量或重力加速度计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Qw = round(float(Qm) * float(g), 10)
                self.lineEdit_3.setText(str(Qw))
                self.lineEdit.create()
                self.lineEdit_4.clear()
        self.shuju()

    def datetime(self):
        global now_time
        now_time= datetime.datetime.now().strftime("%Y.%m.%d %H:%M:%S")

    def shuju(self):
        self.datetime()
        A = self.comboBox.currentText()
        def sql_insert(con, data):
            cursor = con.cursor()
            cursor.execute("insert into 流量与电流的比拟 (日期,已知流量,体积流量Qv,质量流量Qm,重量流量Qw,密度ρ,重力加速度g) values(?,?,?,?,?,?,?)",
                           data)
            con.commit()
        data = (now_time,A,Qv,Qm,Qw,ρ,g)
        sql_insert(con, data)

import img_rc
import sys
if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    Mainwidow = QtWidgets.QMainWindow()  # 创建窗体对象
    ui = Ui_liuliangdianliiu()  # 创建QT设计的窗体
    ui.setupUi(Mainwidow)  # 初始化设置
    Mainwidow.show()  # 显示窗体
    sys.exit(app.exec_())  # 程序关闭时退出进程