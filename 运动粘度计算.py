# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '运动粘度计算.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow,QMessageBox
from PyQt5.QtGui import *
import sqlite3
import datetime
from sqlite3 import Error

#连接数据库
def sql_connection():
    try:
        # con = sqlite3.connect("运动粘度计算数据库.db")
        con = sqlite3.connect("公式集合数据库.db")
        return con
    except Error:
        print(Error)
#创建表
def sql_table(con):
    try:
        # 创建游标
        cursor = con.cursor()
        cursor.execute("create table 运动粘度 (日期,气体类型,运动粘度v,动力粘度μ,气体密度ρ)")
        # 提交事务
        con.commit()
    except Error:
        print(Error)
con = sql_connection()
sql_table(con)


class Ui_yundongniandu(QMainWindow):
    def setupUi(self, yundongniandu):
        yundongniandu.setObjectName("yundongniandu")
        yundongniandu.setWindowModality(QtCore.Qt.NonModal)
        yundongniandu.setEnabled(True)
        yundongniandu.resize(470, 350)
        yundongniandu.setMaximumSize(QtCore.QSize(470, 350))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        yundongniandu.setFont(font)
        yundongniandu.setMouseTracking(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/PNG/chengliang.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        yundongniandu.setWindowIcon(icon)
        yundongniandu.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label = QtWidgets.QLabel(yundongniandu)
        self.label.setGeometry(QtCore.QRect(0, 20, 470, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(24)
        font.setKerning(True)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(yundongniandu)
        self.pushButton.setGeometry(QtCore.QRect(330, 280, 110, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(18)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(85, 170, 255);")
        self.pushButton.setObjectName("pushButton")
        self.lineEdit_2 = QtWidgets.QLineEdit(yundongniandu)
        self.lineEdit_2.setGeometry(QtCore.QRect(240, 170, 200, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_2.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.lineEdit_2.setText("")
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_2.setClearButtonEnabled(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.radioButton = QtWidgets.QRadioButton(yundongniandu)
        self.radioButton.setGeometry(QtCore.QRect(50, 80, 170, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.radioButton.setFont(font)
        self.radioButton.setChecked(True)
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(yundongniandu)
        self.radioButton_2.setGeometry(QtCore.QRect(240, 80, 170, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setObjectName("radioButton_2")
        self.lineEdit = QtWidgets.QLineEdit(yundongniandu)
        self.lineEdit.setGeometry(QtCore.QRect(240, 120, 200, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit.setFont(font)
        self.lineEdit.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit.setStyleSheet("")
        self.lineEdit.setText("")
        self.lineEdit.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.label_4 = QtWidgets.QLabel(yundongniandu)
        self.label_4.setGeometry(QtCore.QRect(30, 170, 190, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.label_3 = QtWidgets.QLabel(yundongniandu)
        self.label_3.setGeometry(QtCore.QRect(30, 120, 190, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.label_8 = QtWidgets.QLabel(yundongniandu)
        self.label_8.setGeometry(QtCore.QRect(225, 280, 90, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("background-color: rgb(85, 170, 0);")
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.lineEdit_3 = QtWidgets.QLineEdit(yundongniandu)
        self.lineEdit_3.setGeometry(QtCore.QRect(240, 220, 200, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_3.setStyleSheet("background-color: rgb(0, 255, 255);")
        self.lineEdit_3.setText("")
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_3.setClearButtonEnabled(True)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_5 = QtWidgets.QLabel(yundongniandu)
        self.label_5.setGeometry(QtCore.QRect(30, 220, 190, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.label_9 = QtWidgets.QLabel(yundongniandu)
        self.label_9.setGeometry(QtCore.QRect(30, 280, 50, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_9.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_9.setObjectName("label_9")
        self.comboBox = QtWidgets.QComboBox(yundongniandu)
        self.comboBox.setGeometry(QtCore.QRect(90, 280, 120, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")

        self.lineEdit_2.setText("0.019845")

        self.retranslateUi(yundongniandu)
        QtCore.QMetaObject.connectSlotsByName(yundongniandu)
        # 设置信号
        self.pushButton.clicked.connect(self.jisuan)
        self.comboBox.currentIndexChanged.connect(self.box)
        self.radioButton.toggled.connect(self.cleck)
        self.radioButton_2.toggled.connect(self.cleck)

        #设置数字输入
        self.lineEdit.setValidator(QDoubleValidator())
        self.lineEdit_2.setValidator(QDoubleValidator())
        self.lineEdit_3.setValidator(QDoubleValidator())


    def retranslateUi(self, yundongniandu):
        _translate = QtCore.QCoreApplication.translate
        yundongniandu.setWindowTitle(_translate("yundongniandu", "运动粘度计算V1.1 By ChengLiang"))
        self.label.setText(_translate("yundongniandu", "运动粘度计算"))
        self.pushButton.setText(_translate("yundongniandu", "计算"))
        self.radioButton.setText(_translate("yundongniandu", "计算运动粘度"))
        self.radioButton_2.setText(_translate("yundongniandu", "计算动力粘度"))
        self.label_4.setText(_translate("yundongniandu", "动力粘度μ Pas"))
        self.label_3.setText(_translate("yundongniandu", "运动粘度v m2/s"))
        self.label_8.setText(_translate("yundongniandu", "<html><head/><body><p>v=μ/ρ</p></body></html>"))
        self.label_5.setText(_translate("yundongniandu", "气体密度的ρ g/L"))
        self.label_9.setText(_translate("yundongniandu", "气体"))
        self.comboBox.setItemText(0, _translate("yundongniandu", "氦气"))
        self.comboBox.setItemText(1, _translate("yundongniandu", "氩气"))
        self.comboBox.setItemText(2, _translate("yundongniandu", "氢气"))
        self.comboBox.setItemText(3, _translate("yundongniandu", "氧气"))
        self.comboBox.setItemText(4, _translate("yundongniandu", "氮气"))
        self.comboBox.setItemText(5, _translate("yundongniandu", "空气"))
        self.comboBox.setItemText(6, _translate("yundongniandu", "二氧化碳"))

    #气体选择
    def qitiniandu(self):
        A = self.comboBox.currentText()
        if A == "氦气":
            self.lineEdit_2.setText("0.019845")
        if A == "氩气":
            self.lineEdit_2.setText("0.022624")
        if A == "氢气":
            self.lineEdit_2.setText("0.008915")
        if A == "氧气":
            self.lineEdit_2.setText("0.02055")
        if A == "氮气":
            self.lineEdit_2.setText("0.017825")
        if A == "空气":
            self.lineEdit_2.setText("0.018448")
        if A == "二氧化碳":
            self.lineEdit_2.setText("0.014932")

    def box(self):
        self.qitiniandu()
        self.jisuan()

    def cleck(self):
        if self.radioButton.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
        if self.radioButton_2.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")


    def canshu(self):
        global v, μ, ρ
        v = self.lineEdit.text()
        μ = self.lineEdit_2.text()
        ρ = self.lineEdit_3.text()

    def jisuan(self):
        self.canshu()
        global v, μ, ρ
        if self.radioButton.isChecked():
            if μ == None or ρ == None or μ == "" or  ρ == "" or float(μ) <= 0 or float(ρ) <= 0:
                QMessageBox.information(None, "使用提示", "输入不完整或错误，请检查后重新输入！", QMessageBox.Ok)
                self.qitiniandu()
            else:
                v = round(float(μ) / float(ρ), 10)
                self.lineEdit.setText(str(v))
                self.shuju()
        if self.radioButton_2.isChecked():
            if v == None or ρ == None or v == "" or  ρ == "" or float(v) <= 0 or float(ρ) <= 0:
                QMessageBox.information(None, "使用提示", "输入不完整或错误，请检查后重新输入！", QMessageBox.Ok)
                self.qitiniandu()
            else:
                μ = round(float(v) * float(ρ), 10)
                self.lineEdit_2.setText(str(μ))
                self.shuju()


    def datetime(self):
        global now_time
        now_time= datetime.datetime.now().strftime("%Y.%m.%d %H:%M:%S")

    def shuju(self):
        self.datetime()
        A = self.comboBox.currentText()
        def sql_insert(con, data):
            cursor = con.cursor()
            cursor.execute("insert into 运动粘度 (日期,气体类型,运动粘度v,动力粘度μ,气体密度ρ) values(?,?,?,?,?)",
                           data)
            con.commit()
        data = (now_time,A,v, μ, ρ)
        sql_insert(con, data)

import img_rc
import sys
if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    Mainwidow = QtWidgets.QMainWindow()  # 创建窗体对象
    ui = Ui_yundongniandu()  # 创建QT设计的窗体
    ui.setupUi(Mainwidow)  # 初始化设置
    Mainwidow.show()  # 显示窗体
    sys.exit(app.exec_())  # 程序关闭时退出进程
