# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '气体热流量计算.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow,QMessageBox
from PyQt5.QtGui import *
import numpy as np
import sqlite3
import datetime
from sqlite3 import Error

#连接数据库
def sql_connection():
    try:
        # con = sqlite3.connect("气体热流量计算数据库.db")
        con = sqlite3.connect("公式集合数据库.db")
        return con
    except Error:
        print(Error)
#创建表
def sql_table(con):
    try:
        # 创建游标
        cursor = con.cursor()
        cursor.execute("create table 气体热流量 (日期,热流量Φ,气体热导率λ,温度T1,温度T2,长度l,流通直径D,流通面积S)")
        # 提交事务
        con.commit()
    except Error:
        print(Error)
con = sql_connection()
sql_table(con)

class Ui_qitireliuliang(QMainWindow):
    def setupUi(self, qitireliuliang):
        qitireliuliang.setObjectName("qitireliuliang")
        qitireliuliang.setWindowModality(QtCore.Qt.NonModal)
        qitireliuliang.setEnabled(True)
        qitireliuliang.resize(740, 560)
        qitireliuliang.setMaximumSize(QtCore.QSize(740, 560))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        qitireliuliang.setFont(font)
        qitireliuliang.setMouseTracking(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/PNG/chengliang.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        qitireliuliang.setWindowIcon(icon)
        qitireliuliang.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label = QtWidgets.QLabel(qitireliuliang)
        self.label.setGeometry(QtCore.QRect(0, 20, 740, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(24)
        font.setKerning(True)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(qitireliuliang)
        self.pushButton.setGeometry(QtCore.QRect(610, 490, 100, 40))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(18)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background-color: rgb(85, 170, 255);")
        self.pushButton.setObjectName("pushButton")
        self.label_9 = QtWidgets.QLabel(qitireliuliang)
        self.label_9.setGeometry(QtCore.QRect(20, 430, 270, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_9.setFont(font)
        self.label_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_9.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_9.setObjectName("label_9")
        self.lineEdit_2 = QtWidgets.QLineEdit(qitireliuliang)
        self.lineEdit_2.setGeometry(QtCore.QRect(300, 180, 300, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_2.setAccessibleName("")
        self.lineEdit_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_2.setText("")
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_2.setReadOnly(False)
        self.lineEdit_2.setPlaceholderText("")
        self.lineEdit_2.setClearButtonEnabled(True)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_7 = QtWidgets.QLineEdit(qitireliuliang)
        self.lineEdit_7.setEnabled(True)
        self.lineEdit_7.setGeometry(QtCore.QRect(300, 430, 300, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_7.setFont(font)
        self.lineEdit_7.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_7.setAccessibleName("")
        self.lineEdit_7.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_7.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_7.setText("")
        self.lineEdit_7.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_7.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_7.setReadOnly(False)
        self.lineEdit_7.setPlaceholderText("")
        self.lineEdit_7.setClearButtonEnabled(True)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.lineEdit_4 = QtWidgets.QLineEdit(qitireliuliang)
        self.lineEdit_4.setGeometry(QtCore.QRect(300, 280, 300, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_4.setAccessibleName("")
        self.lineEdit_4.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_4.setText("")
        self.lineEdit_4.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_4.setReadOnly(False)
        self.lineEdit_4.setPlaceholderText("")
        self.lineEdit_4.setClearButtonEnabled(True)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(qitireliuliang)
        self.lineEdit_5.setEnabled(True)
        self.lineEdit_5.setGeometry(QtCore.QRect(300, 330, 300, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_5.setAccessibleName("")
        self.lineEdit_5.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_5.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_5.setReadOnly(False)
        self.lineEdit_5.setPlaceholderText("")
        self.lineEdit_5.setClearButtonEnabled(True)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(qitireliuliang)
        self.lineEdit_6.setEnabled(True)
        self.lineEdit_6.setGeometry(QtCore.QRect(300, 380, 300, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_6.setFont(font)
        self.lineEdit_6.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_6.setAccessibleName("")
        self.lineEdit_6.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit_6.setText("")
        self.lineEdit_6.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_6.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_6.setReadOnly(False)
        self.lineEdit_6.setPlaceholderText("")
        self.lineEdit_6.setClearButtonEnabled(True)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.lineEdit = QtWidgets.QLineEdit(qitireliuliang)
        self.lineEdit.setGeometry(QtCore.QRect(300, 130, 300, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit.setFont(font)
        self.lineEdit.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit.setAccessibleName("")
        self.lineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.lineEdit.setText("")
        self.lineEdit.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit.setReadOnly(False)
        self.lineEdit.setPlaceholderText("")
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_3 = QtWidgets.QLineEdit(qitireliuliang)
        self.lineEdit_3.setGeometry(QtCore.QRect(300, 230, 300, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        font.setKerning(True)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.lineEdit_3.setAccessibleName("")
        self.lineEdit_3.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
        self.lineEdit_3.setText("")
        self.lineEdit_3.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_3.setReadOnly(False)
        self.lineEdit_3.setPlaceholderText("")
        self.lineEdit_3.setClearButtonEnabled(True)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.label_8 = QtWidgets.QLabel(qitireliuliang)
        self.label_8.setGeometry(QtCore.QRect(20, 375, 270, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_8.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_8.setObjectName("label_8")
        self.label_4 = QtWidgets.QLabel(qitireliuliang)
        self.label_4.setGeometry(QtCore.QRect(20, 175, 270, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(qitireliuliang)
        self.label_5.setGeometry(QtCore.QRect(20, 230, 270, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(qitireliuliang)
        self.label_6.setGeometry(QtCore.QRect(20, 280, 270, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(qitireliuliang)
        self.label_7.setGeometry(QtCore.QRect(20, 330, 270, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_7.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_7.setObjectName("label_7")
        self.label_3 = QtWidgets.QLabel(qitireliuliang)
        self.label_3.setGeometry(QtCore.QRect(20, 130, 270, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.radioButton = QtWidgets.QRadioButton(qitireliuliang)
        self.radioButton.setGeometry(QtCore.QRect(30, 80, 110, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        self.radioButton.setFont(font)
        self.radioButton.setChecked(True)
        self.radioButton.setObjectName("radioButton")
        self.label_10 = QtWidgets.QLabel(qitireliuliang)
        self.label_10.setGeometry(QtCore.QRect(20, 490, 570, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(18)
        font.setKerning(True)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("background-color: rgb(85, 170, 0);")
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setObjectName("label_10")
        self.radioButton_2 = QtWidgets.QRadioButton(qitireliuliang)
        self.radioButton_2.setGeometry(QtCore.QRect(190, 80, 90, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setObjectName("radioButton_2")
        self.radioButton_3 = QtWidgets.QRadioButton(qitireliuliang)
        self.radioButton_3.setGeometry(QtCore.QRect(330, 80, 90, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        self.radioButton_3.setFont(font)
        self.radioButton_3.setObjectName("radioButton_3")
        self.radioButton_4 = QtWidgets.QRadioButton(qitireliuliang)
        self.radioButton_4.setGeometry(QtCore.QRect(460, 80, 110, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        self.radioButton_4.setFont(font)
        self.radioButton_4.setObjectName("radioButton_4")
        self.radioButton_5 = QtWidgets.QRadioButton(qitireliuliang)
        self.radioButton_5.setGeometry(QtCore.QRect(600, 80, 110, 30))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(16)
        self.radioButton_5.setFont(font)
        self.radioButton_5.setObjectName("radioButton_5")

        self.retranslateUi(qitireliuliang)
        QtCore.QMetaObject.connectSlotsByName(qitireliuliang)

        self.pushButton.clicked.connect(self.jisuan)
        self.radioButton.toggled.connect(self.zhimianji)
        self.radioButton_2.toggled.connect(self.zhimianji)
        self.radioButton_3.toggled.connect(self.zhimianji)
        self.radioButton_4.toggled.connect(self.zhimianji)
        self.radioButton_5.toggled.connect(self.zhimianji)

        # 只允许输入数字
        self.lineEdit.setValidator(QDoubleValidator())
        self.lineEdit_2.setValidator(QDoubleValidator())
        self.lineEdit_3.setValidator(QDoubleValidator())
        self.lineEdit_4.setValidator(QDoubleValidator())
        self.lineEdit_5.setValidator(QDoubleValidator())
        self.lineEdit_6.setValidator(QDoubleValidator())
        self.lineEdit_7.setValidator(QDoubleValidator())

    def zhimianji(self):
        if self.radioButton.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(85, 255, 255);")
        if self.radioButton_2.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        if self.radioButton_3.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(85, 255, 255);")
        if self.radioButton_4.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(85, 255, 255);")
        if self.radioButton_5.isChecked():
            self.lineEdit.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_2.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_3.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
            self.lineEdit_5.setStyleSheet("background-color: rgb(85, 255, 255);")
            self.lineEdit_7.setStyleSheet("background-color: rgb(85, 255, 255);")


    def jisuan(self):
        global Φ,λ,T1,T2,l,S,D
        Φ=self.lineEdit.text()
        λ=self.lineEdit_2.text()
        T1=self.lineEdit_3.text()
        T2=self.lineEdit_4.text()
        l=self.lineEdit_5.text()
        S=self.lineEdit_6.text()
        D=self.lineEdit_7.text()
        if self.radioButton.isChecked():
            if λ == None or T1 == None or T2 == None or l == None or D == None or \
                    λ == "" or T1 == "" or T2 == "" or l == "" or D == "" or \
                    float(λ) < 0 or float(l) < 0 or float(D) < 0:
                QMessageBox.information(None, "提示说明", "计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                λ = float(self.lineEdit_2.text())
                T1 = float(self.lineEdit_3.text())
                T2 = float(self.lineEdit_4.text())
                l = float(self.lineEdit_5.text())
                D = float(self.lineEdit_7.text())
                S = np.pi * np.square(D / 2)
                self.lineEdit_6.setText(str(S))
                Φ = λ*S*(T1 - T2) / (1000*l)
                self.lineEdit.setText(str(Φ))
        if self.radioButton_2.isChecked():
            if λ == None or T1 == None or T2 == None or Φ == None or l == None or \
                    λ == "" or T1 == "" or T2 == "" or Φ == "" or l == "" or \
                    float(λ) < 0 or float(Φ) < 0 or float(l) < 0:
                QMessageBox.information(None, "提示说明", "计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Φ= float(self.lineEdit.text())
                λ = float(self.lineEdit_2.text())
                T1 = float(self.lineEdit_3.text())
                T2 = float(self.lineEdit_4.text())
                l = float(self.lineEdit_5.text())
                S = 1000*Φ*l/(λ*(T1 - T2))
                D=2*np.sqrt(S/np.pi)
                self.lineEdit_6.setText(str(S))
                self.lineEdit_7.setText(str(D))
        if self.radioButton_3.isChecked():
            if λ == None or T1 == None or T2 == None or Φ == None or D == None or \
                    λ == "" or T1 == "" or T2 == "" or Φ == "" or D == "" or \
                    float(λ) < 0 or float(Φ) < 0 or float(D) < 0:
                QMessageBox.information(None, "提示说明", "计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Φ= float(self.lineEdit.text())
                λ = float(self.lineEdit_2.text())
                T1 = float(self.lineEdit_3.text())
                T2 = float(self.lineEdit_4.text())
                D = float(self.lineEdit_7.text())
                S = np.pi * np.square(D / 2)
                self.lineEdit_6.setText(str(S))
                l = λ*S*(T1 - T2) / (1000*Φ)
                self.lineEdit_5.setText(str(l))
        if self.radioButton_4.isChecked():
            if λ == None or l == None or T2 == None or Φ == None or D == None or \
                    λ == "" or l == "" or T2 == "" or Φ == "" or D == "" or \
                    float(λ) < 0 or float(Φ) < 0 or float(D) < 0 or float(l) < 0:
                QMessageBox.information(None, "提示说明", "计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Φ= float(self.lineEdit.text())
                λ = float(self.lineEdit_2.text())
                l = float(self.lineEdit_5.text())
                T2 = float(self.lineEdit_4.text())
                D = float(self.lineEdit_7.text())
                S = np.pi * np.square(D / 2)
                self.lineEdit_6.setText(str(S))
                T1 = T2+ (1000*l*Φ)/(λ*S)
                self.lineEdit_3.setText(str(T1))
        if self.radioButton_5.isChecked():
            if λ == None or l == None or T1 == None or Φ == None or D == None or \
                    λ == "" or l == "" or T1 == "" or Φ == "" or D == "" or \
                    float(λ) < 0 or float(Φ) < 0 or float(D) < 0 or float(l) < 0:
                QMessageBox.information(None, "提示说明", "计算数据不完整或错误，请检查后重新输入！", QMessageBox.Ok)
            else:
                Φ= float(self.lineEdit.text())
                λ = float(self.lineEdit_2.text())
                l = float(self.lineEdit_5.text())
                T1 = float(self.lineEdit_3.text())
                D = float(self.lineEdit_7.text())
                S = np.pi * np.square(D / 2)
                self.lineEdit_6.setText(str(S))
                T2 = T1-(1000*l*Φ)/(λ*S)
                self.lineEdit_4.setText(str(T2))
        self.shuju()

    def datetime(self):
        global now_time
        now_time= datetime.datetime.now().strftime("%Y.%m.%d %H:%M:%S")

    def shuju(self):
        self.datetime()
        def sql_insert(con, data):
                cursor = con.cursor()
                cursor.execute("insert into 气体热流量 (日期,热流量Φ,气体热导率λ,温度T1,温度T2,长度l,流通直径D,流通面积S)"
                               " values(?,?,?,?,?,?,?,?)", data)
                con.commit()
        data = (now_time,Φ,λ,T1,T2,l,D,S)
        sql_insert(con, data)

    def retranslateUi(self, qitireliuliang):
        _translate = QtCore.QCoreApplication.translate
        qitireliuliang.setWindowTitle(_translate("qitireliuliang", "气体热流量计算V1.1 By ChengLiang"))
        self.label.setText(_translate("qitireliuliang", "气体热流量计算"))
        self.pushButton.setText(_translate("qitireliuliang", "计算"))
        self.label_9.setText(_translate("qitireliuliang", "流通直径D（mm）"))
        self.label_8.setText(_translate("qitireliuliang", "流通面积S（mm2）"))
        self.label_4.setText(_translate("qitireliuliang", "气体热导率的λ（W/mk）"))
        self.label_5.setText(_translate("qitireliuliang", "温度T1（℃）"))
        self.label_6.setText(_translate("qitireliuliang", "温度T2（℃）"))
        self.label_7.setText(_translate("qitireliuliang", "长度l（mm）"))
        self.label_3.setText(_translate("qitireliuliang", "热流量的Φ（W）"))
        self.radioButton.setText(_translate("qitireliuliang", "求热流量"))
        self.label_10.setText(_translate("qitireliuliang", "Φ=λS(T1-T2)/(1000l)"))
        self.radioButton_2.setText(_translate("qitireliuliang", "求面积"))
        self.radioButton_3.setText(_translate("qitireliuliang", "求长度"))
        self.radioButton_4.setText(_translate("qitireliuliang", "求温度T1"))
        self.radioButton_5.setText(_translate("qitireliuliang", "求温度T2"))
import img_rc
import sys
if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    Mainwidow = QtWidgets.QMainWindow()  # 创建窗体对象
    ui = Ui_qitireliuliang()  # 创建QT设计的窗体
    ui.setupUi(Mainwidow)  # 初始化设置
    Mainwidow.show()  # 显示窗体
    sys.exit(app.exec_())  # 程序关闭时退出进程